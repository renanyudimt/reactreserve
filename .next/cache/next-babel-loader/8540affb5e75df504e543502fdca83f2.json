{"ast":null,"code":"var __jsx = React.createElement;\nimport { Context } from \"../components/Authentication/Authentication\";\nimport React, { useContext } from 'react';\nimport cookies from \"js-cookie\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\n\nfunction Account() {\n  const token = cookies.get('reactreserve_token');\n  const router = useRouter();\n  const pathname = router.pathname;\n  const isProtectedRoute = pathname === \"/account\" || pathname === \"/create\";\n  React.useEffect(() => {\n    async function validateUser() {\n      try {\n        const url = `${baseUrl}/api/account`;\n        const payload = {\n          headers: {\n            Authorization: token\n          }\n        };\n        await axios.post(url, {}, payload).then(response => {\n          console.log(response.data.success);\n\n          if (response.data.success) {\n            dispatch({\n              type: \"SET_USER\",\n              user: user\n            });\n          } else {\n            dispatch({\n              type: \"CLEAR\"\n            });\n          }\n        }).catch(error => console.log(error));\n      } catch (error) {\n        cookie.remove(\"reactreserve_token\");\n        router.push(\"/login\");\n      }\n    }\n\n    if (token) {\n      validateUser();\n    } else {\n      if (isProtectedRoute) {\n        router.push(\"/login\");\n      }\n    }\n  });\n  const {\n    0: state,\n    1: dispatch\n  } = useContext(Context);\n  console.log(state);\n  return __jsx(React.Fragment, null, \"Account\");\n}\n\nexport default Account;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/account.js"],"names":["Context","React","useContext","cookies","useRouter","axios","baseUrl","Account","token","get","router","pathname","isProtectedRoute","useEffect","validateUser","url","payload","headers","Authorization","post","then","response","console","log","data","success","dispatch","type","user","catch","error","cookie","remove","push","state"],"mappings":";AAAA,SAASA,OAAT,QAAwB,6CAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAMC,KAAK,GAAGL,OAAO,CAACM,GAAR,CAAY,oBAAZ,CAAd;AACA,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AACA,QAAMC,gBAAgB,GAAID,QAAQ,KAAK,UAAb,IAA2BA,QAAQ,KAAK,SAAlE;AAEAV,EAAAA,KAAK,CAACY,SAAN,CAAiB,MAAM;AACrB,mBAAeC,YAAf,GAA8B;AAE5B,UAAI;AACF,cAAMC,GAAG,GAAI,GAAET,OAAQ,cAAvB;AACA,cAAMU,OAAO,GAAG;AAAEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAEV;AAAjB;AAAX,SAAhB;AACA,cAAMH,KAAK,CAACc,IAAN,CAAWJ,GAAX,EAAgB,EAAhB,EAAoBC,OAApB,EACHI,IADG,CACEC,QAAQ,IAAI;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,OAA1B;;AACA,cAAIJ,QAAQ,CAACG,IAAT,CAAcC,OAAlB,EAA2B;AACzBC,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAE,UAAR;AAAoBC,cAAAA,IAAI,EAAEA;AAA1B,aAAD,CAAR;AACD,WAFD,MAEO;AACLF,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAR;AACD;AACF,SARG,EASHE,KATG,CASGC,KAAK,IAAIR,OAAO,CAACC,GAAR,CAAYO,KAAZ,CATZ,CAAN;AAUD,OAbD,CAaE,OAAMA,KAAN,EAAa;AACbC,QAAAA,MAAM,CAACC,MAAP,CAAc,oBAAd;AACAtB,QAAAA,MAAM,CAACuB,IAAP,CAAY,QAAZ;AACD;AAEF;;AACD,QAAIzB,KAAJ,EAAW;AACTM,MAAAA,YAAY;AACb,KAFD,MAEO;AACL,UAAIF,gBAAJ,EAAsB;AACpBF,QAAAA,MAAM,CAACuB,IAAP,CAAY,QAAZ;AACD;AACF;AACF,GA7BD;AA8BA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQR;AAAR,MAAoBxB,UAAU,CAACF,OAAD,CAApC;AAEAsB,EAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACA,SAAO,sCAAP;AAED;;AAED,eAAe3B,OAAf","sourcesContent":["import { Context } from \"../components/Authentication/Authentication\";\nimport React, { useContext } from 'react';\nimport cookies from \"js-cookie\";\nimport { useRouter } from \"next/router\"\nimport axios from \"axios\"\nimport baseUrl from \"../utils/baseUrl\";\n\nfunction Account() {\n  const token = cookies.get('reactreserve_token')\n  const router = useRouter();\n  const pathname = router.pathname;\n  const isProtectedRoute = (pathname === \"/account\" || pathname === \"/create\");\n  \n  React.useEffect( () => {\n    async function validateUser() {\n\n      try {\n        const url = `${baseUrl}/api/account`\n        const payload = { headers: { Authorization: token }}\n        await axios.post(url, {}, payload)\n          .then(response => {\n            console.log(response.data.success);\n            if (response.data.success) {\n              dispatch({ type: \"SET_USER\", user: user})\n            } else {\n              dispatch({ type: \"CLEAR\" })\n            }\n          })\n          .catch(error => console.log(error))\n      } catch(error) {\n        cookie.remove(\"reactreserve_token\");\n        router.push(\"/login\")\n      }\n\n    }\n    if (token) {\n      validateUser();\n    } else {\n      if (isProtectedRoute) {\n        router.push(\"/login\")\n      }\n    }\n  })\n  const [state, dispatch] = useContext(Context);\n\n  console.log(state)\n  return <>Account\n  </>\n}\n\nexport default Account"]},"metadata":{},"sourceType":"module"}