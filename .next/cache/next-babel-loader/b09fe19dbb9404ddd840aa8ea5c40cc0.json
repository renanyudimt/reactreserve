{"ast":null,"code":"import _regeneratorRuntime from \"/Users/renanyudi/Sites/estudos/react-app/react-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/renanyudi/Sites/estudos/react-app/react-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\"; //Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\n\nimport ProductList from \"../components/Index/ProductList\";\n\nfunction Home(props) {\n  console.log(props);\n  return __jsx(ProductList, {\n    products: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  });\n}\n/* \nHome.getInitialProps = async () => {\n  const url = `${baseUrl}/api/products`;\n  // fetch data on server\n  const response = await axios.get(url);\n  // return response data as an object\n  return { products: response.data };\n  // note: this object will be merged with existing props\n};\n */\n\n\n_c = Home;\nHome.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var url, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"\".concat(baseUrl, \"/api/products\");\n          data = {}; // fetch data on server\n\n          _context.next = 4;\n          return axios.get(url).then(function (response) {\n            if (response.data.success) {\n              return {\n                products: response.data.products\n              };\n            }\n          })[\"catch\"](function (error) {\n            console.log(error);\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js"],"names":["axios","baseUrl","ProductList","Home","props","console","log","getInitialProps","url","data","get","then","response","success","products","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAdSD,I;AAgBTA,IAAI,CAACI,eAAL,yEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,UAAAA,GADe,aACNP,OADM;AAEjBQ,UAAAA,IAFiB,GAEV,EAFU,EAGrB;;AAHqB;AAAA,iBAIfT,KAAK,CAACU,GAAN,CAAUF,GAAV,EACLG,IADK,CACA,UAACC,QAAD,EAAc;AAClB,gBAAIA,QAAQ,CAACH,IAAT,CAAcI,OAAlB,EAA2B;AACzB,qBAAO;AACLC,gBAAAA,QAAQ,EAAEF,QAAQ,CAACH,IAAT,CAAcK;AADnB,eAAP;AAGD;AACF,WAPK,WAQC,UAACC,KAAD,EAAW;AAChBV,YAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,WAVK,CAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAmBA,eAAeZ,IAAf","sourcesContent":["import axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\n\n//Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\nimport ProductList from \"../components/Index/ProductList\";\n\nfunction Home(props) {\n  console.log(props)\n  return <ProductList products={props} />\n}\n\n/* \nHome.getInitialProps = async () => {\n  const url = `${baseUrl}/api/products`;\n  // fetch data on server\n  const response = await axios.get(url);\n  // return response data as an object\n  return { products: response.data };\n  // note: this object will be merged with existing props\n};\n */\n\nHome.getInitialProps = async () => {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  await axios.get(url)\n  .then((response) => {\n    if (response.data.success) {\n      return { \n        products: response.data.products \n      }\n    }\n  })\n  .catch((error) => {\n    console.log(error)\n  })\n\n};\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}