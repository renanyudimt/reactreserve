{"ast":null,"code":"var _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\"; //Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\n\nimport ProductList from \"../components/Index/ProductList\";\n\nfunction Home(props) {\n  console.log(props);\n  return __jsx(ProductList, {\n    products: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  });\n}\n/* \nHome.getInitialProps = async () => {\n  const url = `${baseUrl}/api/products`;\n  // fetch data on server\n  const response = await axios.get(url);\n  // return response data as an object\n  return { products: response.data };\n  // note: this object will be merged with existing props\n};\n */\n\n\nHome.getInitialProps = async () => {\n  const url = `${baseUrl}/api/products`;\n  let data = {}; // fetch data on server\n\n  await axios.get(url).then(response => {\n    if (response.data.success) {\n      return {\n        products: response.data.products\n      };\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js"],"names":["axios","baseUrl","ProductList","Home","props","console","log","getInitialProps","url","data","get","then","response","success","products","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAD,IAAI,CAACI,eAAL,GAAuB,YAAY;AACjC,QAAMC,GAAG,GAAI,GAAEP,OAAQ,eAAvB;AACA,MAAIQ,IAAI,GAAG,EAAX,CAFiC,CAGjC;;AACA,QAAMT,KAAK,CAACU,GAAN,CAAUF,GAAV,EACHG,IADG,CACGC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACH,IAAT,CAAcI,OAAlB,EAA2B;AACzB,aAAO;AAAEC,QAAAA,QAAQ,EAAEF,QAAQ,CAACH,IAAT,CAAcK;AAA1B,OAAP;AACD;AACF,GALG,EAMHC,KANG,CAMIC,KAAD,IAAW;AAChBX,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,GARG,CAAN;AAUD,CAdD;;AAiBA,eAAeb,IAAf","sourcesContent":["import axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\n\n//Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\nimport ProductList from \"../components/Index/ProductList\";\n\nfunction Home(props) {\n  console.log(props)\n  return <ProductList products={props} />\n}\n\n/* \nHome.getInitialProps = async () => {\n  const url = `${baseUrl}/api/products`;\n  // fetch data on server\n  const response = await axios.get(url);\n  // return response data as an object\n  return { products: response.data };\n  // note: this object will be merged with existing props\n};\n */\n\nHome.getInitialProps = async () => {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  await axios.get(url)\n    .then((response) => {\n      if (response.data.success) {\n        return { products: response.data.products }\n      }\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n\n};\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}