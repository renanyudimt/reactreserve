{"ast":null,"code":"var _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\"; //Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\n\nimport ProductList from \"../components/Index/ProductList\";\n\nfunction Home(props) {\n  return __jsx(ProductList, {\n    products: props.products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }\n  });\n}\n\nHome.getInitialProps = async ctx => {\n  const url = `${baseUrl}/api/products`; // fetch data on server\n\n  const response = await axios.get(url); // return response data as an object\n\n  return {\n    products: response.data.products\n  }; // note: this object will be merged with existing props\n};\n/* export async function getServerSideProps(context) {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  const response = await axios.get(url);\n  if (response.data.success) {\n    return {\n      props: {\n        products: response.data.products\n      } // will be passed to the page component as props\n    }\n  } else {\n    return {\n      props: {}\n    }\n  }\n} */\n\n\nexport default Home;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js"],"names":["axios","baseUrl","ProductList","Home","props","products","getInitialProps","ctx","url","response","get","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,SAAO,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA,KAAK,CAACC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAEDF,IAAI,CAACG,eAAL,GAAuB,MAAOC,GAAP,IAAe;AACpC,QAAMC,GAAG,GAAI,GAAEP,OAAQ,eAAvB,CADoC,CAEpC;;AACA,QAAMQ,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUF,GAAV,CAAvB,CAHoC,CAIpC;;AACA,SAAO;AAAEH,IAAAA,QAAQ,EAAEI,QAAQ,CAACE,IAAT,CAAcN;AAA1B,GAAP,CALoC,CAMpC;AACD,CAPD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeF,IAAf","sourcesContent":["import axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\n\n//Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\nimport ProductList from \"../components/Index/ProductList\";\n\nfunction Home(props) {\n  return <ProductList products={props.products} />\n}\n\nHome.getInitialProps = async (ctx) => {\n  const url = `${baseUrl}/api/products`;\n  // fetch data on server\n  const response = await axios.get(url);\n  // return response data as an object\n  return { products: response.data.products };\n  // note: this object will be merged with existing props\n};\n \n\n/* export async function getServerSideProps(context) {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  const response = await axios.get(url);\n  if (response.data.success) {\n    return {\n      props: {\n        products: response.data.products\n      } // will be passed to the page component as props\n    }\n  } else {\n    return {\n      props: {}\n    }\n  }\n} */\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}