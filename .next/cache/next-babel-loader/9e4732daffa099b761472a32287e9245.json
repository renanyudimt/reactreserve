{"ast":null,"code":"var _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\"; //Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\n\nimport ProductList from \"../components/Index/ProductList\";\nimport ProductPagination from \"../components/Index/ProductPagination\";\n\nfunction Home(props) {\n  console.log(props);\n  return __jsx(React.Fragment, null, __jsx(ProductList, {\n    products: props.products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }), __jsx(ProductPagination, {\n    totalPages: props.totalPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }));\n}\n\nHome.getInitialProps = async ctx => {\n  const page = ctx.query.page ? ctx.query.page : \"1\";\n  const size = 9;\n  const payload = {\n    params: {\n      page: page,\n      size: size\n    }\n  };\n  const url = `${baseUrl}/api/products`; // fetch data on server\n\n  const response = await axios.get(url, payload);\n  console.log(response); // return response data as an object\n\n  return {\n    products: response.data.products\n  }; // note: this object will be merged with existing props\n};\n/* export async function getServerSideProps(context) {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  const response = await axios.get(url);\n  if (response.data.success) {\n    return {\n      props: {\n        products: response.data.products\n      } // will be passed to the page component as props\n    }\n  } else {\n    return {\n      props: {}\n    }\n  }\n} */\n\n\nexport default Home;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js"],"names":["axios","baseUrl","ProductList","ProductPagination","Home","props","console","log","products","totalPage","getInitialProps","ctx","page","query","size","payload","params","url","response","get","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO,4BACL,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA,KAAK,CAACG,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAEL,MAAC,iBAAD;AAAmB,IAAA,UAAU,EAAEH,KAAK,CAACI,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,CAAP;AAID;;AAEDL,IAAI,CAACM,eAAL,GAAuB,MAAOC,GAAP,IAAe;AACpC,QAAMC,IAAI,GAAGD,GAAG,CAACE,KAAJ,CAAUD,IAAV,GAAiBD,GAAG,CAACE,KAAJ,CAAUD,IAA3B,GAAkC,GAA/C;AACA,QAAME,IAAI,GAAG,CAAb;AACA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE;AACNJ,MAAAA,IAAI,EAAEA,IADA;AAENE,MAAAA,IAAI,EAAEA;AAFA;AADM,GAAhB;AAMA,QAAMG,GAAG,GAAI,GAAEhB,OAAQ,eAAvB,CAToC,CAUpC;;AACA,QAAMiB,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAUF,GAAV,EAAeF,OAAf,CAAvB;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ,EAZoC,CAapC;;AACA,SAAO;AAAEV,IAAAA,QAAQ,EAAEU,QAAQ,CAACE,IAAT,CAAcZ;AAA1B,GAAP,CAdoC,CAepC;AACD,CAhBD;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeJ,IAAf","sourcesContent":["import axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\n\n//Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\nimport ProductList from \"../components/Index/ProductList\";\nimport ProductPagination from \"../components/Index/ProductPagination\"\n\nfunction Home(props) {\n  console.log(props)\n  return <>\n    <ProductList products={props.products} />\n    <ProductPagination totalPages={props.totalPage} />\n  </>\n}\n\nHome.getInitialProps = async (ctx) => {\n  const page = ctx.query.page ? ctx.query.page : \"1\";\n  const size = 9\n  const payload = {\n    params: {\n      page: page,\n      size: size,\n    }\n  }\n  const url = `${baseUrl}/api/products`;\n  // fetch data on server\n  const response = await axios.get(url, payload);\n  console.log(response)\n  // return response data as an object\n  return { products: response.data.products};\n  // note: this object will be merged with existing props\n};\n \n\n/* export async function getServerSideProps(context) {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  const response = await axios.get(url);\n  if (response.data.success) {\n    return {\n      props: {\n        products: response.data.products\n      } // will be passed to the page component as props\n    }\n  } else {\n    return {\n      props: {}\n    }\n  }\n} */\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}