{"ast":null,"code":"var _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/pages/account.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext } from 'react';\nimport AccountHeader from \"../components/Account/AccountHeader\";\nimport AccountOrders from \"../components/Account/AccountOrders\";\nimport { parseCookies } from \"nookies\";\nimport baseUrl from '../utils/baseUrl';\nimport axios from \"axios\";\nimport catchErrors from '../utils/catchErrors';\nimport cookies from \"js-cookie\";\n\nfunction Account({\n  user,\n  orders\n}) {\n  console.log(orders);\n  console.log(user);\n  return __jsx(React.Fragment, null, __jsx(AccountHeader, _extends({}, user, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  })), __jsx(AccountOrders, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }));\n}\n\nAccount.getInitialProps = async ctx => {\n  console.log(parseCookies(ctx));\n  const reactreserve_token = cookies.get(\"reactreserve_token\");\n\n  if (!reactreserve_token) {\n    return {\n      orders: []\n    };\n  }\n\n  try {\n    const payload = {\n      headers: {\n        Authorization: reactreserve_token\n      }\n    };\n    const url = `${baseUrl}/api/orders`;\n    const response = await axios.get(url, payload);\n    return response.data.orders;\n  } catch (error) {\n    console.log(error);\n    catchErrors(error, window.alert);\n  }\n};\n\nexport default Account;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/account.js"],"names":["React","useContext","AccountHeader","AccountOrders","parseCookies","baseUrl","axios","catchErrors","cookies","Account","user","orders","console","log","getInitialProps","ctx","reactreserve_token","get","payload","headers","Authorization","url","response","data","error","window","alert"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAjB,EAAmC;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAO,4BACL,MAAC,aAAD,eAAmBA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK,EAEL,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,CAAP;AAID;;AAEDD,OAAO,CAACK,eAAR,GAA0B,MAAOC,GAAP,IAAe;AACvCH,EAAAA,OAAO,CAACC,GAAR,CAAYT,YAAY,CAACW,GAAD,CAAxB;AACA,QAAMC,kBAAkB,GAAGR,OAAO,CAACS,GAAR,CAAY,oBAAZ,CAA3B;;AACA,MAAI,CAACD,kBAAL,EAAyB;AACvB,WAAO;AACLL,MAAAA,MAAM,EAAE;AADH,KAAP;AAGD;;AACD,MAAI;AACF,UAAMO,OAAO,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEJ;AAAjB;AAAX,KAAhB;AACA,UAAMK,GAAG,GAAI,GAAEhB,OAAQ,aAAvB;AACA,UAAMiB,QAAQ,GAAG,MAAMhB,KAAK,CAACW,GAAN,CAAUI,GAAV,EAAeH,OAAf,CAAvB;AACA,WAAOI,QAAQ,CAACC,IAAT,CAAcZ,MAArB;AACD,GALD,CAKE,OAAMa,KAAN,EAAa;AACbZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACAjB,IAAAA,WAAW,CAACiB,KAAD,EAAQC,MAAM,CAACC,KAAf,CAAX;AACD;AAGF,CAnBD;;AAqBA,eAAejB,OAAf","sourcesContent":["import React, { useContext } from 'react';\nimport AccountHeader from \"../components/Account/AccountHeader\";\nimport AccountOrders from \"../components/Account/AccountOrders\";\nimport { parseCookies } from \"nookies\"\nimport baseUrl from '../utils/baseUrl';\nimport axios from \"axios\";\nimport catchErrors from '../utils/catchErrors';\nimport cookies from \"js-cookie\"\n\nfunction Account({ user, orders }) {\n  console.log(orders)\n  console.log(user)\n  return <>\n    <AccountHeader {...user} />\n    <AccountOrders />\n  </>\n}\n\nAccount.getInitialProps = async (ctx) => {\n  console.log(parseCookies(ctx))\n  const reactreserve_token = cookies.get(\"reactreserve_token\")\n  if (!reactreserve_token) {\n    return {\n      orders: []\n    }\n  }\n  try {\n    const payload = { headers: { Authorization: reactreserve_token }}\n    const url = `${baseUrl}/api/orders`\n    const response = await axios.get(url, payload)\n    return response.data.orders\n  } catch(error) {\n    console.log(error)\n    catchErrors(error, window.alert)\n  } \n\n  \n}\n\nexport default Account"]},"metadata":{},"sourceType":"module"}