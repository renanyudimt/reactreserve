{"ast":null,"code":"var _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/pages/account.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext } from 'react';\nimport AccountHeader from \"../components/Account/AccountHeader\";\nimport AccountOrders from \"../components/Account/AccountOrders\";\nimport { parseCookies } from \"nookies\";\nimport baseUrl from '../utils/baseUrl';\nimport axios from \"axios\";\nimport catchErrors from '../utils/catchErrors';\nimport cookies from \"js-cookie\";\n\nfunction Account({\n  user,\n  orders\n}) {\n  return __jsx(React.Fragment, null, __jsx(AccountHeader, _extends({}, user, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  })), __jsx(AccountOrders, _extends({}, orders, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  })));\n}\n\nAccount.getInitialProps = async ctx => {\n  const {\n    reactreserve_token\n  } = parseCookies(ctx);\n\n  if (!reactreserve_token) {\n    return {\n      orders: []\n    };\n  }\n\n  try {\n    const payload = {\n      headers: {\n        Authorization: reactreserve_token\n      }\n    };\n    const url = `${baseUrl}/api/orders`;\n    const response = await axios.get(url, payload);\n    return {\n      orders: response.data.orders\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default Account;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/account.js"],"names":["React","useContext","AccountHeader","AccountOrders","parseCookies","baseUrl","axios","catchErrors","cookies","Account","user","orders","getInitialProps","ctx","reactreserve_token","payload","headers","Authorization","url","response","get","data","error","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAjB,EAAmC;AACjC,SAAO,4BACL,MAAC,aAAD,eAAmBD,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK,EAEL,MAAC,aAAD,eAAmBC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFK,CAAP;AAID;;AAEDF,OAAO,CAACG,eAAR,GAA0B,MAAOC,GAAP,IAAe;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAyBV,YAAY,CAACS,GAAD,CAA3C;;AACA,MAAI,CAACC,kBAAL,EAAyB;AACvB,WAAO;AACLH,MAAAA,MAAM,EAAE;AADH,KAAP;AAGD;;AACD,MAAI;AACF,UAAMI,OAAO,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEH;AAAjB;AAAX,KAAhB;AACA,UAAMI,GAAG,GAAI,GAAEb,OAAQ,aAAvB;AACA,UAAMc,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUF,GAAV,EAAeH,OAAf,CAAvB;AACA,WAAO;AACLJ,MAAAA,MAAM,EAAEQ,QAAQ,CAACE,IAAT,CAAcV;AADjB,KAAP;AAGD,GAPD,CAOE,OAAMW,KAAN,EAAa;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAjBD;;AAmBA,eAAeb,OAAf","sourcesContent":["import React, { useContext } from 'react';\nimport AccountHeader from \"../components/Account/AccountHeader\";\nimport AccountOrders from \"../components/Account/AccountOrders\";\nimport { parseCookies } from \"nookies\"\nimport baseUrl from '../utils/baseUrl';\nimport axios from \"axios\";\nimport catchErrors from '../utils/catchErrors';\nimport cookies from \"js-cookie\"\n\nfunction Account({ user, orders }) {\n  return <>\n    <AccountHeader {...user} />\n    <AccountOrders {...orders} />\n  </>\n}\n\nAccount.getInitialProps = async (ctx) => {\n  const { reactreserve_token } = parseCookies(ctx)\n  if (!reactreserve_token) {\n    return {\n      orders: []\n    }\n  }\n  try {\n    const payload = { headers: { Authorization: reactreserve_token }}\n    const url = `${baseUrl}/api/orders`\n    const response = await axios.get(url, payload)\n    return {\n      orders: response.data.orders\n    }\n  } catch(error) {\n    console.log(error)\n  } \n}\n\nexport default Account"]},"metadata":{},"sourceType":"module"}