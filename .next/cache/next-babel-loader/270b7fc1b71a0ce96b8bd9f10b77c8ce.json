{"ast":null,"code":"import Product from \"../../models/Product\";\nimport connectDb from \"../../utils/connectDb\";\nconnectDb();\nexport default (async (req, res) => {\n  const {\n    page,\n    size\n  } = req.query; //convert string value to number:\n\n  const pageNum = Number(page);\n  const pageSize = Number(size);\n  let products = [];\n\n  if (pageNum == 1) {\n    procuts = await Product.find().limit(pageSize);\n  } else {\n    const skips = pageSize * (pageNum - 1);\n    products = await Product.find().skip(skips).limit(pageSize);\n  }\n\n  try {\n    const products = await Product.find();\n\n    if (res.statusCode == 200) {\n      res.status(200).json({\n        success: true,\n        products: products\n      });\n    } else {\n      res.json({\n        success: false\n      });\n    }\n  } catch (error) {\n    res.status(500).send(\"Server error in creating\");\n  }\n});","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/api/products.js"],"names":["Product","connectDb","req","res","page","size","query","pageNum","Number","pageSize","products","procuts","find","limit","skips","skip","statusCode","status","json","success","error","send"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEAA,SAAS;AAET,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBH,GAAG,CAACI,KAA3B,CADiC,CAGjC;;AACA,QAAMC,OAAO,GAAGC,MAAM,CAACJ,IAAD,CAAtB;AACA,QAAMK,QAAQ,GAAGD,MAAM,CAACH,IAAD,CAAvB;AACA,MAAIK,QAAQ,GAAG,EAAf;;AAEA,MAAIH,OAAO,IAAI,CAAf,EAAkB;AAChBI,IAAAA,OAAO,GAAG,MAAMX,OAAO,CAACY,IAAR,GAAeC,KAAf,CAAqBJ,QAArB,CAAhB;AACD,GAFD,MAEO;AACL,UAAMK,KAAK,GAAGL,QAAQ,IAAIF,OAAO,GAAG,CAAd,CAAtB;AACAG,IAAAA,QAAQ,GAAG,MAAMV,OAAO,CAACY,IAAR,GAAeG,IAAf,CAAoBD,KAApB,EAA2BD,KAA3B,CAAiCJ,QAAjC,CAAjB;AACD;;AAED,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMV,OAAO,CAACY,IAAR,EAAvB;;AACA,QAAIT,GAAG,CAACa,UAAJ,IAAkB,GAAtB,EAA2B;AACzBb,MAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAE,IAAV;AAAgBT,QAAAA,QAAQ,EAAEA;AAA1B,OAArB;AACD,KAFD,MAEO;AACLP,MAAAA,GAAG,CAACe,IAAJ,CAAS;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAT;AACD;AACF,GAPD,CAOE,OAAMC,KAAN,EAAa;AACbjB,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB,0BAArB;AACD;AACF,CAzBD","sourcesContent":["import Product from \"../../models/Product\";\nimport connectDb from \"../../utils/connectDb\";\n\nconnectDb(); \n\nexport default async (req, res) => {\n  const { page, size } = req.query;\n\n  //convert string value to number:\n  const pageNum = Number(page);\n  const pageSize = Number(size);\n  let products = [];\n\n  if (pageNum == 1) {\n    procuts = await Product.find().limit(pageSize)\n  } else {\n    const skips = pageSize * (pageNum - 1)\n    products = await Product.find().skip(skips).limit(pageSize)\n  }\n\n  try {\n    const products = await Product.find();\n    if (res.statusCode == 200) {\n      res.status(200).json({success: true, products: products})\n    } else {\n      res.json({success: false})\n    }\n  } catch(error) {\n    res.status(500).send(\"Server error in creating\");\n  }\n}"]},"metadata":{},"sourceType":"module"}