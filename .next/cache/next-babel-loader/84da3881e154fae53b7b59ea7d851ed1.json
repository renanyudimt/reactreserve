{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport cookies from \"js-cookie\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport baseUrl from \"../../utils/baseUrl\";\nimport { Context } from \"../Store/Store\";\n\nfunction Validation({\n  children\n}) {\n  const {\n    0: state,\n    1: dispatch\n  } = useContext(Context);\n  const token = cookies.get('reactreserve_token');\n  const router = useRouter();\n  const pathname = router.pathname;\n  const isProtectedRoute = pathname === \"/account\" || pathname === \"/create\";\n  React.useEffect(() => {\n    async function validateUser() {\n      try {\n        const url = `${baseUrl}/api/account`;\n        const payload = {\n          headers: {\n            Authorization: token\n          }\n        };\n        await axios.post(url, {}, payload).then(response => {\n          if (response.data.success) {\n            state = dispatch({\n              type: \"SET_USER\",\n              user: response.data.user\n            });\n            console.log(state);\n          } else {\n            dispatch({\n              type: \"CLEAR\"\n            });\n          }\n        }).catch(error => console.log(\"Error\", error));\n      } catch (error) {\n        cookie.remove(\"reactreserve_token\");\n        router.push(\"/login\");\n      }\n    }\n\n    if (token) {\n      validateUser();\n    } else {\n      if (isProtectedRoute) {\n        router.push(\"/login\");\n      }\n    }\n  }, []);\n  return __jsx(React.Fragment, null, children);\n}\n\nexport default Validation;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/components/Validation/Validation.js"],"names":["React","useContext","cookies","useRouter","axios","baseUrl","Context","Validation","children","state","dispatch","token","get","router","pathname","isProtectedRoute","useEffect","validateUser","url","payload","headers","Authorization","post","then","response","data","success","type","user","console","log","catch","error","cookie","remove","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAkC;AAChC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,UAAU,CAACK,OAAD,CAApC;AACA,QAAMK,KAAK,GAAGT,OAAO,CAACU,GAAR,CAAY,oBAAZ,CAAd;AACA,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAMW,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AACA,QAAMC,gBAAgB,GAAID,QAAQ,KAAK,UAAb,IAA2BA,QAAQ,KAAK,SAAlE;AAEAd,EAAAA,KAAK,CAACgB,SAAN,CAAiB,MAAM;AACrB,mBAAeC,YAAf,GAA8B;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAI,GAAEb,OAAQ,cAAvB;AACA,cAAMc,OAAO,GAAG;AAAEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAEV;AAAjB;AAAX,SAAhB;AACA,cAAMP,KAAK,CAACkB,IAAN,CAAWJ,GAAX,EAAgB,EAAhB,EAAoBC,OAApB,EACHI,IADG,CACEC,QAAQ,IAAI;AAChB,cAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzBjB,YAAAA,KAAK,GAAGC,QAAQ,CAAC;AAAEiB,cAAAA,IAAI,EAAE,UAAR;AAAoBC,cAAAA,IAAI,EAAEJ,QAAQ,CAACC,IAAT,CAAcG;AAAxC,aAAD,CAAhB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAZ;AACD,WAHD,MAGO;AACLC,YAAAA,QAAQ,CAAC;AAAEiB,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAR;AACD;AACF,SARG,EASHI,KATG,CASGC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CATZ,CAAN;AAUD,OAbD,CAaE,OAAMA,KAAN,EAAa;AACbC,QAAAA,MAAM,CAACC,MAAP,CAAc,oBAAd;AACArB,QAAAA,MAAM,CAACsB,IAAP,CAAY,QAAZ;AACD;AAEF;;AACD,QAAIxB,KAAJ,EAAW;AACTM,MAAAA,YAAY;AACb,KAFD,MAEO;AACL,UAAIF,gBAAJ,EAAsB;AACpBF,QAAAA,MAAM,CAACsB,IAAP,CAAY,QAAZ;AACD;AACF;AACF,GA5BD,EA4BG,EA5BH;AA8BA,SACE,4BACI3B,QADJ,CADF;AAKD;;AAGD,eAAeD,UAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport cookies from \"js-cookie\";\nimport { useRouter } from \"next/router\"\nimport axios from \"axios\"\nimport baseUrl from \"../../utils/baseUrl\";\nimport { Context } from \"../Store/Store\";\n\nfunction Validation({ children }) {\n  const [state, dispatch] = useContext(Context);\n  const token = cookies.get('reactreserve_token')\n  const router = useRouter();\n  const pathname = router.pathname;\n  const isProtectedRoute = (pathname === \"/account\" || pathname === \"/create\");\n\n  React.useEffect( () => {\n    async function validateUser() {\n      try {\n        const url = `${baseUrl}/api/account`\n        const payload = { headers: { Authorization: token }}\n        await axios.post(url, {}, payload)\n          .then(response => {\n            if (response.data.success) {\n              state = dispatch({ type: \"SET_USER\", user: response.data.user })\n              console.log(state)\n            } else {\n              dispatch({ type: \"CLEAR\" })\n            }\n          })\n          .catch(error => console.log(\"Error\", error))\n      } catch(error) {\n        cookie.remove(\"reactreserve_token\");\n        router.push(\"/login\")\n      }\n\n    }\n    if (token) {\n      validateUser();\n    } else {\n      if (isProtectedRoute) {\n        router.push(\"/login\")\n      }\n    }\n  }, [])\n\n  return (\n    <>\n      { children }\n    </>\n  )\n}\n\n\nexport default Validation;"]},"metadata":{},"sourceType":"module"}