{"ast":null,"code":"import _regeneratorRuntime from \"/Users/renanyudi/Sites/estudos/react-app/react-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/renanyudi/Sites/estudos/react-app/react-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Context } from \"../components/Authentication/Authentication\";\nimport React, { useContext } from 'react';\nimport cookies from \"js-cookie\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\n\nfunction Account() {\n  _s();\n\n  var token = cookies.get('reactreserve_token');\n  var router = useRouter();\n  var pathname = router.pathname;\n  var isProtectedRoute = pathname === \"/account\" || pathname === \"/create\";\n  React.useEffect(function () {\n    function validateUser() {\n      return _validateUser.apply(this, arguments);\n    }\n\n    function _validateUser() {\n      _validateUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, payload;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                url = \"\".concat(baseUrl, \"/api/account\");\n                payload = {\n                  headers: {\n                    Authorization: token\n                  }\n                };\n                _context.next = 5;\n                return axios.post(url, {}, payload).then(function (response) {\n                  console.log(response.data.success);\n\n                  if (response.data.success) {\n                    dispatch({\n                      type: \"SET_USER\",\n                      user: user\n                    });\n                  } else {\n                    dispatch({\n                      type: \"CLEAR\"\n                    });\n                  }\n                })[\"catch\"](function (error) {\n                  return console.log(error);\n                });\n\n              case 5:\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                cookie.remove(\"reactreserve_token\");\n                router.push(\"/login\");\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n      return _validateUser.apply(this, arguments);\n    }\n\n    if (token) {\n      validateUser();\n    } else {\n      if (isProtectedRoute) {\n        router.push(\"/login\");\n      }\n    }\n  });\n\n  var _useContext = useContext(Context),\n      state = _useContext[0],\n      dispatch = _useContext[1];\n\n  console.log(state);\n  return __jsx(React.Fragment, null, \"Account\");\n}\n\n_s(Account, \"kJYGy+oiR0MlFjxXjv6iQckS/nY=\", false, function () {\n  return [useRouter];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/account.js"],"names":["Context","React","useContext","cookies","useRouter","axios","baseUrl","Account","token","get","router","pathname","isProtectedRoute","useEffect","validateUser","url","payload","headers","Authorization","post","then","response","console","log","data","success","dispatch","type","user","error","cookie","remove","push","state"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,6CAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,MAAMC,KAAK,GAAGL,OAAO,CAACM,GAAR,CAAY,oBAAZ,CAAd;AACA,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,MAAMO,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AACA,MAAMC,gBAAgB,GAAID,QAAQ,KAAK,UAAb,IAA2BA,QAAQ,KAAK,SAAlE;AAEAV,EAAAA,KAAK,CAACY,SAAN,CAAiB,YAAM;AAAA,aACNC,YADM;AAAA;AAAA;;AAAA;AAAA,+EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGUC,gBAAAA,GAHV,aAGmBT,OAHnB;AAIUU,gBAAAA,OAJV,GAIoB;AAAEC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAEV;AAAjB;AAAX,iBAJpB;AAAA;AAAA,uBAKUH,KAAK,CAACc,IAAN,CAAWJ,GAAX,EAAgB,EAAhB,EAAoBC,OAApB,EACHI,IADG,CACE,UAAAC,QAAQ,EAAI;AAChBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,OAA1B;;AACA,sBAAIJ,QAAQ,CAACG,IAAT,CAAcC,OAAlB,EAA2B;AACzBC,oBAAAA,QAAQ,CAAC;AAAEC,sBAAAA,IAAI,EAAE,UAAR;AAAoBC,sBAAAA,IAAI,EAAEA;AAA1B,qBAAD,CAAR;AACD,mBAFD,MAEO;AACLF,oBAAAA,QAAQ,CAAC;AAAEC,sBAAAA,IAAI,EAAE;AAAR,qBAAD,CAAR;AACD;AACF,iBARG,WASG,UAAAE,KAAK;AAAA,yBAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAAJ;AAAA,iBATR,CALV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBIC,gBAAAA,MAAM,CAACC,MAAP,CAAc,oBAAd;AACArB,gBAAAA,MAAM,CAACsB,IAAP,CAAY,QAAZ;;AAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADqB;AAAA;AAAA;;AAsBrB,QAAIxB,KAAJ,EAAW;AACTM,MAAAA,YAAY;AACb,KAFD,MAEO;AACL,UAAIF,gBAAJ,EAAsB;AACpBF,QAAAA,MAAM,CAACsB,IAAP,CAAY,QAAZ;AACD;AACF;AACF,GA7BD;;AANiB,oBAoCS9B,UAAU,CAACF,OAAD,CApCnB;AAAA,MAoCViC,KApCU;AAAA,MAoCHP,QApCG;;AAsCjBJ,EAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,SAAO,sCAAP;AAED;;GAzCQ1B,O;UAEQH,S;;;KAFRG,O;AA2CT,eAAeA,OAAf","sourcesContent":["import { Context } from \"../components/Authentication/Authentication\";\nimport React, { useContext } from 'react';\nimport cookies from \"js-cookie\";\nimport { useRouter } from \"next/router\"\nimport axios from \"axios\"\nimport baseUrl from \"../utils/baseUrl\";\n\nfunction Account() {\n  const token = cookies.get('reactreserve_token')\n  const router = useRouter();\n  const pathname = router.pathname;\n  const isProtectedRoute = (pathname === \"/account\" || pathname === \"/create\");\n  \n  React.useEffect( () => {\n    async function validateUser() {\n\n      try {\n        const url = `${baseUrl}/api/account`\n        const payload = { headers: { Authorization: token }}\n        await axios.post(url, {}, payload)\n          .then(response => {\n            console.log(response.data.success);\n            if (response.data.success) {\n              dispatch({ type: \"SET_USER\", user: user})\n            } else {\n              dispatch({ type: \"CLEAR\" })\n            }\n          })\n          .catch(error => console.log(error))\n      } catch(error) {\n        cookie.remove(\"reactreserve_token\");\n        router.push(\"/login\")\n      }\n\n    }\n    if (token) {\n      validateUser();\n    } else {\n      if (isProtectedRoute) {\n        router.push(\"/login\")\n      }\n    }\n  })\n  const [state, dispatch] = useContext(Context);\n\n  console.log(state)\n  return <>Account\n  </>\n}\n\nexport default Account"]},"metadata":{},"sourceType":"module"}