{"ast":null,"code":"var _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Layout from \"../components/_App/Layout\";\nimport cookie from \"js-cookie\";\nimport React from \"react\";\nimport Store from \"./../components/Store/Store\";\nimport { useRouter, Router } from \"next/router\";\nimport jwt from \"jsonwebtoken\";\n\nfunction App({\n  Component,\n  pageProps\n}) {\n  const token = cookie.get('reactreserve_token');\n  const router = useRouter();\n  const pathname = router.pathname;\n  const isProtectedRoute = pathname === \"/account\" || pathname === \"/create\";\n  React.useEffect(() => {\n    if (isProtectedRoute) {\n      if (token) {\n        try {\n          const {\n            userId\n          } = jwt.verify(token, process.env.JWT_SECRET);\n          console.log(userId);\n        } catch (error) {\n          console.log(error); //cookie.remove(\"reactreserve_token\");\n        }\n      } else {\n        router.push(\"/login\");\n      }\n    }\n  });\n  return __jsx(Store, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport async function getInitialProps(ctx) {\n  console.log(\"entrou no role2\");\n}\nexport default App;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/_app.js"],"names":["Layout","cookie","React","Store","useRouter","Router","jwt","App","Component","pageProps","token","get","router","pathname","isProtectedRoute","useEffect","userId","verify","process","env","JWT_SECRET","console","log","error","push","getInitialProps","ctx"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,aAAlC;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAb,EAAuC;AACrC,QAAMC,KAAK,GAAGT,MAAM,CAACU,GAAP,CAAW,oBAAX,CAAd;AACA,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AACA,QAAMC,gBAAgB,GAAID,QAAQ,KAAK,UAAb,IAA2BA,QAAQ,KAAK,SAAlE;AAEAX,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,QAAID,gBAAJ,EAAsB;AACpB,UAAIJ,KAAJ,EAAW;AACT,YAAI;AACF,gBAAM;AAAEM,YAAAA;AAAF,cAAYV,GAAG,CAACW,MAAJ,CAAWP,KAAX,EAAkBQ,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAAlB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACD,SAHD,CAGE,OAAMO,KAAN,EAAa;AACbF,UAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EADa,CAEb;AACD;AAEF,OATD,MASO;AACLX,QAAAA,MAAM,CAACY,IAAP,CAAY,QAAZ;AACD;AACF;AAEF,GAhBD;AAoBA,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAef,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AASD;;AACD,OAAO,eAAegB,eAAf,CAA+BC,GAA/B,EAAoC;AACzCL,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;AACD,eAAef,GAAf","sourcesContent":["import Layout from \"../components/_App/Layout\";\nimport cookie from \"js-cookie\";\nimport React from \"react\";\nimport Store from \"./../components/Store/Store\";\nimport { useRouter, Router } from \"next/router\"\nimport jwt from \"jsonwebtoken\"\n\nfunction App({ Component, pageProps }) {\n  const token = cookie.get('reactreserve_token')\n  const router = useRouter();\n  const pathname = router.pathname;\n  const isProtectedRoute = (pathname === \"/account\" || pathname === \"/create\");\n\n  React.useEffect(() => {\n    if (isProtectedRoute) {\n      if (token) {\n        try {\n          const { userId }= jwt.verify(token, process.env.JWT_SECRET)\n          console.log(userId);\n        } catch(error) {\n          console.log(error)\n          //cookie.remove(\"reactreserve_token\");\n        }\n\n      } else {\n        router.push(\"/login\")\n      }\n    }\n\n  }) \n\n\n\n  return (\n    <Store>\n      <Layout> \n        <Component {...pageProps} />\n      </Layout>\n    </Store>\n    \n  );\n\n}\nexport async function getInitialProps(ctx) {\n  console.log(\"entrou no role2\")\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}