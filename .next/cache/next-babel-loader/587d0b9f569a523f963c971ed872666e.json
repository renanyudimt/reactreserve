{"ast":null,"code":"import User from \"../../models/User\";\nimport jwt from \"jsonwebtoken\";\nimport connectDb from \"../../utils/connectDb\";\nimport { destroyCookie } from \"nookies\";\nconnectDb();\nexport default (async (req, res) => {\n  console.log(req.headers);\n\n  if (!(\"authorization\" in req.headers)) {\n    return res.status(401).send(\"No authorization token\");\n  }\n\n  try {\n    const {\n      userId\n    } = jwt.verify(req.headers.authorization, process.env.JWT_SECRET);\n    const user = await User.findOne({\n      _id: userId\n    });\n\n    if (user) {\n      res.json({\n        successs: true,\n        data: user\n      });\n    } else {\n      res.json({\n        successs: false,\n        msg: \"User not found\"\n      });\n    }\n  } catch (error) {\n    res.status(403).json({\n      success: false,\n      msg: \"Invalid token\"\n    });\n  }\n});","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/api/account.js"],"names":["User","jwt","connectDb","destroyCookie","req","res","console","log","headers","status","send","userId","verify","authorization","process","env","JWT_SECRET","user","findOne","_id","json","successs","data","msg","error","success"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEAD,SAAS;AAET,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,OAAhB;;AACA,MAAI,EAAE,mBAAmBJ,GAAG,CAACI,OAAzB,CAAJ,EAAuC;AACrC,WAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAArB,CAAP;AACD;;AAED,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAaV,GAAG,CAACW,MAAJ,CAAWR,GAAG,CAACI,OAAJ,CAAYK,aAAvB,EAAsCC,OAAO,CAACC,GAAR,CAAYC,UAAlD,CAAnB;AACA,UAAMC,IAAI,GAAG,MAAMjB,IAAI,CAACkB,OAAL,CAAa;AAAEC,MAAAA,GAAG,EAAER;AAAP,KAAb,CAAnB;;AAEA,QAAIM,IAAJ,EAAU;AACRZ,MAAAA,GAAG,CAACe,IAAJ,CAAS;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,IAAI,EAAEL;AAAxB,OAAT;AACD,KAFD,MAEO;AACLZ,MAAAA,GAAG,CAACe,IAAJ,CAAS;AAAEC,QAAAA,QAAQ,EAAE,KAAZ;AAAmBE,QAAAA,GAAG,EAAE;AAAxB,OAAT;AACD;AAED,GAVF,CAUG,OAAMC,KAAN,EAAa;AACdnB,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBW,IAAhB,CAAqB;AAAEK,MAAAA,OAAO,EAAE,KAAX;AAAkBF,MAAAA,GAAG,EAAE;AAAvB,KAArB;AACD;AACF,CAnBD","sourcesContent":["import User from \"../../models/User\";\nimport jwt from \"jsonwebtoken\";\nimport connectDb from \"../../utils/connectDb\";\nimport { destroyCookie } from \"nookies\"\n\nconnectDb();\n\nexport default async (req, res) => {\n  console.log(req.headers)\n  if (!(\"authorization\" in req.headers)) {\n    return res.status(401).send(\"No authorization token\");\n  }\n\n  try {\n    const { userId } = jwt.verify(req.headers.authorization, process.env.JWT_SECRET)\n    const user = await User.findOne({ _id: userId })\n\n    if (user) {\n      res.json({ successs: true, data: user })\n    } else {\n      res.json({ successs: false, msg: \"User not found\" })\n    }\n\n   } catch(error) {\n    res.status(403).json({ success: false, msg: \"Invalid token\" })\n  }\n}"]},"metadata":{},"sourceType":"module"}