{"ast":null,"code":"import _regeneratorRuntime from \"/Users/renanyudi/Sites/estudos/react-app/react-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/renanyudi/Sites/estudos/react-app/react-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\"; //Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\n\nimport ProductList from \"../components/Index/ProductList\";\nimport ProductPagination from \"../components/Index/ProductPagination\";\n\nfunction Home(props) {\n  console.log(props.totalPage);\n  return __jsx(React.Fragment, null, __jsx(ProductList, {\n    products: props.products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }), __jsx(ProductPagination, {\n    totalPage: props.totalPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }));\n}\n\n_c = Home;\n\nHome.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var page, size, payload, url, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = ctx.query.page ? ctx.query.page : \"1\";\n            size = 9;\n            payload = {\n              params: {\n                page: page,\n                size: size\n              }\n            };\n            url = \"\".concat(baseUrl, \"/api/products\"); // fetch data on server\n\n            _context.next = 6;\n            return axios.get(url, payload);\n\n          case 6:\n            response = _context.sent;\n            return _context.abrupt(\"return\", {\n              products: response.data.products,\n              totalPages: response.data.totalPages\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/* export async function getServerSideProps(context) {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  const response = await axios.get(url);\n  if (response.data.success) {\n    return {\n      props: {\n        products: response.data.products\n      } // will be passed to the page component as props\n    }\n  } else {\n    return {\n      props: {}\n    }\n  }\n} */\n\n\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js"],"names":["axios","baseUrl","ProductList","ProductPagination","Home","props","console","log","totalPage","products","getInitialProps","ctx","page","query","size","payload","params","url","get","response","data","totalPages"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAlB;AACA,SAAO,4BACL,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEH,KAAK,CAACI,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAEL,MAAC,iBAAD;AAAmB,IAAA,SAAS,EAAEJ,KAAK,CAACG,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,CAAP;AAID;;KANQJ,I;;AAQTA,IAAI,CAACM,eAAL;AAAA,sEAAuB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,IADe,GACRD,GAAG,CAACE,KAAJ,CAAUD,IAAV,GAAiBD,GAAG,CAACE,KAAJ,CAAUD,IAA3B,GAAkC,GAD1B;AAEfE,YAAAA,IAFe,GAER,CAFQ;AAGfC,YAAAA,OAHe,GAGL;AACdC,cAAAA,MAAM,EAAE;AACNJ,gBAAAA,IAAI,EAAEA,IADA;AAENE,gBAAAA,IAAI,EAAEA;AAFA;AADM,aAHK;AASfG,YAAAA,GATe,aASNhB,OATM,oBAUrB;;AAVqB;AAAA,mBAWED,KAAK,CAACkB,GAAN,CAAUD,GAAV,EAAeF,OAAf,CAXF;;AAAA;AAWfI,YAAAA,QAXe;AAAA,6CAad;AAAEV,cAAAA,QAAQ,EAAEU,QAAQ,CAACC,IAAT,CAAcX,QAA1B;AAAoCY,cAAAA,UAAU,EAAEF,QAAQ,CAACC,IAAT,CAAcC;AAA9D,aAbc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAejB,IAAf","sourcesContent":["import axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\n\n//Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\nimport ProductList from \"../components/Index/ProductList\";\nimport ProductPagination from \"../components/Index/ProductPagination\"\n\nfunction Home(props) {\n  console.log(props.totalPage)\n  return <>\n    <ProductList products={props.products} />\n    <ProductPagination totalPage={props.totalPage} />\n  </>\n}\n\nHome.getInitialProps = async (ctx) => {\n  const page = ctx.query.page ? ctx.query.page : \"1\";\n  const size = 9\n  const payload = {\n    params: {\n      page: page,\n      size: size,\n    }\n  }\n  const url = `${baseUrl}/api/products`;\n  // fetch data on server\n  const response = await axios.get(url, payload);\n  // return response data as an object\n  return { products: response.data.products, totalPages: response.data.totalPages};\n  // note: this object will be merged with existing props\n};\n \n\n/* export async function getServerSideProps(context) {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  const response = await axios.get(url);\n  if (response.data.success) {\n    return {\n      props: {\n        products: response.data.products\n      } // will be passed to the page component as props\n    }\n  } else {\n    return {\n      props: {}\n    }\n  }\n} */\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}