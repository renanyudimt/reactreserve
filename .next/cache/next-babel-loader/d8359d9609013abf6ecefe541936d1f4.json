{"ast":null,"code":"import mongoose, { mongo } from \"mongoose\";\nconst {\n  String\n} = mongoose.Schema.Types;\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true,\n    select: false //password will not be provided when we find for a user\n\n  },\n  role: {\n    type: String,\n    required: true,\n    default: 'user',\n    enum: [\"user\", \"admin\", \"root\"]\n  }\n}, {\n  timestamps: true //irá pegar o create date e update date de tudo\n\n});\nexport default mongoose.models.User || mongoose.model(\"User\", UserSchema); //usa um existe um cria outro","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/models/User.js"],"names":["mongoose","mongo","String","Schema","Types","UserSchema","name","type","required","email","unique","password","select","role","default","enum","timestamps","models","User","model"],"mappings":"AAAA,OAAOA,QAAP,IAAmBC,KAAnB,QAAgC,UAAhC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaF,QAAQ,CAACG,MAAT,CAAgBC,KAAnC;AAEA,MAAMC,UAAU,GAAG,IAAIL,QAAQ,CAACG,MAAb,CAAoB;AACrCG,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEL,MADF;AAEJM,IAAAA,QAAQ,EAAE;AAFN,GAD+B;AAKrCC,EAAAA,KAAK,EAAE;AACLF,IAAAA,IAAI,EAAEL,MADD;AAELM,IAAAA,QAAQ,EAAE,IAFL;AAGLE,IAAAA,MAAM,EAAE;AAHH,GAL8B;AAUrCC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,IAAI,EAAEL,MADE;AAERM,IAAAA,QAAQ,EAAE,IAFF;AAGRI,IAAAA,MAAM,EAAE,KAHA,CAGM;;AAHN,GAV2B;AAerCC,EAAAA,IAAI,EAAE;AACJN,IAAAA,IAAI,EAAEL,MADF;AAEJM,IAAAA,QAAQ,EAAE,IAFN;AAGJM,IAAAA,OAAO,EAAE,MAHL;AAIJC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB;AAJF;AAf+B,CAApB,EAqBhB;AACDC,EAAAA,UAAU,EAAE,IADX,CACgB;;AADhB,CArBgB,CAAnB;AAyBA,eAAehB,QAAQ,CAACiB,MAAT,CAAgBC,IAAhB,IAAwBlB,QAAQ,CAACmB,KAAT,CAAe,MAAf,EAAuBd,UAAvB,CAAvC,C,CAA0E","sourcesContent":["import mongoose, { mongo } from \"mongoose\";\n\nconst { String } = mongoose.Schema.Types;\n\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String, \n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true,\n    select: false //password will not be provided when we find for a user\n  },\n  role: {\n    type: String,\n    required: true,\n    default: 'user',\n    enum: [\"user\", \"admin\", \"root\"]\n  }\n}, {\n  timestamps: true //irá pegar o create date e update date de tudo\n})\n\nexport default mongoose.models.User || mongoose.model(\"User\", UserSchema) //usa um existe um cria outro"]},"metadata":{},"sourceType":"module"}