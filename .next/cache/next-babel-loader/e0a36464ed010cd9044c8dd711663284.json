{"ast":null,"code":"var _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\"; //Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\n\nimport ProductList from \"../components/Index/ProductList\";\n\nfunction Home(props) {\n  return __jsx(ProductList, {\n    products: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }\n  });\n}\n/* \nHome.getInitialProps = async () => {\n  const url = `${baseUrl}/api/products`;\n  // fetch data on server\n  const response = await axios.get(url);\n  // return response data as an object\n  return { products: response.data };\n  // note: this object will be merged with existing props\n};\n */\n\n/* Home.getInitialProps = async () => {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  const response = await axios.get(url);\n\n  if (response.data.success) {\n    return { \n      response\n    }\n  }\n};\n */\n\n\nexport async function getServerSideProps(context) {\n  const url = `${baseUrl}/api/products`;\n  let data = {}; // fetch data on server\n\n  const response = await axios.get(url);\n  let disgraca = response.data.products;\n\n  if (response.data.success) {\n    return {\n      props: {\n        disgraca\n      } // will be passed to the page component as props\n\n    };\n  } else {\n    return {\n      props: {}\n    };\n  }\n}\nexport default Home;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js"],"names":["axios","baseUrl","ProductList","Home","props","getServerSideProps","context","url","data","response","get","disgraca","products","success"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,SAAO,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAMC,GAAG,GAAI,GAAEN,OAAQ,eAAvB;AACA,MAAIO,IAAI,GAAG,EAAX,CAFgD,CAGhD;;AACA,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUH,GAAV,CAAvB;AACA,MAAII,QAAQ,GAAGF,QAAQ,CAACD,IAAT,CAAcI,QAA7B;;AACA,MAAIH,QAAQ,CAACD,IAAT,CAAcK,OAAlB,EAA2B;AACzB,WAAO;AACLT,MAAAA,KAAK,EAAE;AACLO,QAAAA;AADK,OADF,CAGH;;AAHG,KAAP;AAKD,GAND,MAMO;AACL,WAAO;AACLP,MAAAA,KAAK,EAAE;AADF,KAAP;AAGD;AAGF;AAGD,eAAeD,IAAf","sourcesContent":["import axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\n\n//Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\nimport ProductList from \"../components/Index/ProductList\";\n\nfunction Home(props) {\n  return <ProductList products={props} />\n}\n\n/* \nHome.getInitialProps = async () => {\n  const url = `${baseUrl}/api/products`;\n  // fetch data on server\n  const response = await axios.get(url);\n  // return response data as an object\n  return { products: response.data };\n  // note: this object will be merged with existing props\n};\n */\n\n\n/* Home.getInitialProps = async () => {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  const response = await axios.get(url);\n\n  if (response.data.success) {\n    return { \n      response\n    }\n  }\n};\n */\nexport async function getServerSideProps(context) {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  const response = await axios.get(url);\n  let disgraca = response.data.products\n  if (response.data.success) {\n    return {\n      props: {\n        disgraca\n      } // will be passed to the page component as props\n    }\n  } else {\n    return {\n      props: {}\n    }\n  }\n\n  \n}\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}