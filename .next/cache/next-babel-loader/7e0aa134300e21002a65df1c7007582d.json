{"ast":null,"code":"var _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/components/Cart/CartSummary.js\";\nvar __jsx = React.createElement;\nimport { Button, Segment, Divider } from \"semantic-ui-react\";\nimport React, { useState } from \"react\";\nimport calculateCartTotal from \"../../utils/calculateCartTotal\";\n\nfunction CartSummary({\n  products\n}) {\n  const {\n    0: cartAmount,\n    1: setCartAmount\n  } = useState(0);\n  const {\n    0: stripeAmount,\n    1: setStripeAmount\n  } = useState(0);\n  const {\n    0: isCartEmpty,\n    1: setCartEmpty\n  } = useState(true);\n  React.useEffect(() => {\n    const {\n      cartTotal,\n      stripeTotal\n    } = calculateCartTotal(products);\n    setCartEmpty(products.length == 0);\n    setCartAmount(cartTotal);\n    setStripeAmount(stripeTotal);\n  }, [products]);\n  return __jsx(React.Fragment, null, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }), __jsx(Segment, {\n    clearing: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Sub total: \"), \" $\", cartAmount, __jsx(Button, {\n    disabled: isCartEmpty,\n    icon: \"cart\",\n    color: \"teal\",\n    floated: \"right\",\n    content: \"Checkout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default CartSummary;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/components/Cart/CartSummary.js"],"names":["Button","Segment","Divider","React","useState","calculateCartTotal","CartSummary","products","cartAmount","setCartAmount","stripeAmount","setStripeAmount","isCartEmpty","setCartEmpty","useEffect","cartTotal","stripeTotal","length"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,QAAyC,mBAAzC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AACjC,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BL,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM;AAAA,OAACM,YAAD;AAAA,OAAeC;AAAf,MAAkCP,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM;AAAA,OAACQ,WAAD;AAAA,OAAcC;AAAd,MAA8BT,QAAQ,CAAC,IAAD,CAA5C;AAEAD,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA6BX,kBAAkB,CAACE,QAAD,CAArD;AAEAM,IAAAA,YAAY,CAACN,QAAQ,CAACU,MAAT,IAAmB,CAApB,CAAZ;AACAR,IAAAA,aAAa,CAACM,SAAD,CAAb;AACAJ,IAAAA,eAAe,CAACK,WAAD,CAAf;AAED,GAPD,EAOG,CAACT,QAAD,CAPH;AASA,SACA,4BACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,QACiCC,UADjC,EAEE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEI,WAAlB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,KAAK,EAAC,MAAlD;AAAyD,IAAA,OAAO,EAAC,OAAjE;AAAyE,IAAA,OAAO,EAAC,UAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADA;AASD;;AAED,eAAeN,WAAf","sourcesContent":["import { Button, Segment, Divider } from \"semantic-ui-react\"\nimport React, { useState } from \"react\";\nimport calculateCartTotal from \"../../utils/calculateCartTotal\";\n\nfunction CartSummary({ products }) {\n  const [cartAmount, setCartAmount] = useState(0)\n  const [stripeAmount, setStripeAmount] = useState(0)\n  const [isCartEmpty, setCartEmpty] = useState(true)\n\n  React.useEffect(() => {\n    const { cartTotal, stripeTotal } = calculateCartTotal(products)\n\n    setCartEmpty(products.length == 0)\n    setCartAmount(cartTotal)\n    setStripeAmount(stripeTotal)\n\n  }, [products])\n  \n  return (\n  <> \n    <Divider />\n    <Segment clearing size=\"large\">\n      <strong>Sub total: </strong> ${cartAmount }\n      <Button disabled={isCartEmpty}  icon=\"cart\" color=\"teal\" floated=\"right\" content=\"Checkout\" />\n    </Segment>\n  </>\n  )\n}\n\nexport default CartSummary"]},"metadata":{},"sourceType":"module"}