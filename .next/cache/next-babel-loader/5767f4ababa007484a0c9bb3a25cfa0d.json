{"ast":null,"code":"import _regeneratorRuntime from \"/Users/renanyudi/Sites/estudos/react-app/react-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/renanyudi/Sites/estudos/react-app/react-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport cookies from \"js-cookie\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport baseUrl from \"../../utils/baseUrl\";\nimport { Context } from \"../Store/Store\";\n\nfunction Validation(_ref) {\n  var children = _ref.children;\n  return __jsx(React.Fragment, null, children);\n}\n\n_c = Validation;\nexport function validateUserLogged() {\n  return _validateUserLogged.apply(this, arguments);\n}\n\nfunction _validateUserLogged() {\n  var _s = $RefreshSig$();\n\n  _validateUserLogged = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _useContext, state, dispatch, token, router, pathname, isProtectedRoute, url, payload;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            _useContext = useContext(Context), state = _useContext[0], dispatch = _useContext[1];\n            token = cookies.get('reactreserve_token');\n            router = useRouter();\n            pathname = router.pathname;\n            isProtectedRoute = pathname === \"/account\" || pathname === \"/create\";\n\n            if (!token) {\n              _context.next = 20;\n              break;\n            }\n\n            _context.prev = 7;\n            url = \"\".concat(baseUrl, \"/api/account\");\n            payload = {\n              headers: {\n                Authorization: token\n              }\n            };\n            _context.next = 12;\n            return axios.post(url, {}, payload).then(function (response) {\n              if (response.data.success) {\n                dispatch({\n                  type: \"SET_USER\",\n                  user: response.data.user\n                });\n                console.log(state);\n              } else {\n                dispatch({\n                  type: \"CLEAR\"\n                });\n              }\n            })[\"catch\"](function (error) {\n              return console.log(\"Error\", error);\n            });\n\n          case 12:\n            _context.next = 18;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](7);\n            cookie.remove(\"reactreserve_token\");\n            router.push(\"/login\");\n\n          case 18:\n            _context.next = 21;\n            break;\n\n          case 20:\n            if (isProtectedRoute) {\n              router.push(\"/login\");\n            }\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[7, 14]]);\n  }), \"EHNB1emd47b8EJ/41cB7CZs10sQ=\", false, function () {\n    return [useRouter];\n  }));\n  return _validateUserLogged.apply(this, arguments);\n}\n\nexport default Validation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/components/Validation/Validation.js"],"names":["React","useContext","cookies","useRouter","axios","baseUrl","Context","Validation","children","validateUserLogged","state","dispatch","token","get","router","pathname","isProtectedRoute","url","payload","headers","Authorization","post","then","response","data","success","type","user","console","log","error","cookie","remove","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,SAASC,UAAT,OAAkC;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAChC,SACE,4BACIA,QADJ,CADF;AAKD;;KANQD,U;AAQT,gBAAsBE,kBAAtB;AAAA;AAAA;;;;;oFAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,0BACqBR,UAAU,CAACK,OAAD,CAD/B,EACEI,KADF,mBACSC,QADT;AAECC,YAAAA,KAFD,GAESV,OAAO,CAACW,GAAR,CAAY,oBAAZ,CAFT;AAGCC,YAAAA,MAHD,GAGUX,SAAS,EAHnB;AAICY,YAAAA,QAJD,GAIYD,MAAM,CAACC,QAJnB;AAKCC,YAAAA,gBALD,GAKqBD,QAAQ,KAAK,UAAb,IAA2BA,QAAQ,KAAK,SAL7D;;AAAA,iBAODH,KAPC;AAAA;AAAA;AAAA;;AAAA;AASKK,YAAAA,GATL,aAScZ,OATd;AAUKa,YAAAA,OAVL,GAUe;AAAEC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,aAAa,EAAER;AAAjB;AAAX,aAVf;AAAA;AAAA,mBAWKR,KAAK,CAACiB,IAAN,CAAWJ,GAAX,EAAgB,EAAhB,EAAoBC,OAApB,EACHI,IADG,CACE,UAAAC,QAAQ,EAAI;AAChB,kBAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzBd,gBAAAA,QAAQ,CAAC;AAAEe,kBAAAA,IAAI,EAAE,UAAR;AAAoBC,kBAAAA,IAAI,EAAEJ,QAAQ,CAACC,IAAT,CAAcG;AAAxC,iBAAD,CAAR;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACD,eAHD,MAGO;AACLC,gBAAAA,QAAQ,CAAC;AAAEe,kBAAAA,IAAI,EAAE;AAAR,iBAAD,CAAR;AACD;AACF,aARG,WASG,UAAAI,KAAK;AAAA,qBAAIF,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB,CAAJ;AAAA,aATR,CAXL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsBDC,YAAAA,MAAM,CAACC,MAAP,CAAc,oBAAd;AACAlB,YAAAA,MAAM,CAACmB,IAAP,CAAY,QAAZ;;AAvBC;AAAA;AAAA;;AAAA;AA0BH,gBAAIjB,gBAAJ,EAAsB;AACpBF,cAAAA,MAAM,CAACmB,IAAP,CAAY,QAAZ;AACD;;AA5BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;YAGU9B,S;;;;;AA8BjB,eAAeI,UAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport cookies from \"js-cookie\";\nimport { useRouter } from \"next/router\"\nimport axios from \"axios\"\nimport baseUrl from \"../../utils/baseUrl\";\nimport { Context } from \"../Store/Store\";\n\nfunction Validation({ children }) {\n  return (\n    <>\n      { children }\n    </>\n  )\n}\n\nexport async function validateUserLogged() {\n  const [state, dispatch] = useContext(Context);\n  const token = cookies.get('reactreserve_token')\n  const router = useRouter();\n  const pathname = router.pathname;\n  const isProtectedRoute = (pathname === \"/account\" || pathname === \"/create\");\n  \n  if (token) {\n    try {\n      const url = `${baseUrl}/api/account`\n      const payload = { headers: { Authorization: token }}\n      await axios.post(url, {}, payload)\n        .then(response => {\n          if (response.data.success) {\n            dispatch({ type: \"SET_USER\", user: response.data.user })\n            console.log(state)\n          } else {\n            dispatch({ type: \"CLEAR\" })\n          }\n        })\n        .catch(error => console.log(\"Error\", error))\n    } catch(error) {\n      cookie.remove(\"reactreserve_token\");\n      router.push(\"/login\")\n    }\n  } else {\n    if (isProtectedRoute) {\n      router.push(\"/login\")\n    }\n  }\n}\n\n\nexport default Validation;"]},"metadata":{},"sourceType":"module"}