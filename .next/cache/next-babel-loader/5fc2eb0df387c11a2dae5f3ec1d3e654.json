{"ast":null,"code":"var _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/components/Authentication/Authentication.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useReducer } from \"react\";\nimport Reducer from \"./Reducer\";\nimport cookies from \"js-cookie\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nconst initialState = {\n  user: false\n};\nexport const Context = /*#__PURE__*/createContext(initialState);\n\nfunction Authentication({\n  children\n}) {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(Reducer, initialState);\n  const token = cookies.get('reactreserve_token');\n  const router = useRouter();\n  const pathname = router.pathname;\n  const isProtectedRoute = pathname === \"/account\" || pathname === \"/create\";\n  React.useEffect(() => {\n    async function validateUser() {\n      try {\n        const url = `${baseUrl}/api/account`;\n        const payload = {\n          headers: {\n            Authorization: token\n          }\n        };\n        await axios.post(url, {}, payload).then(response => {\n          console.log(response.data.success);\n\n          if (response.data.success) {\n            dispatch({\n              type: \"SET_USER\",\n              user: user\n            });\n          } else {\n            dispatch({\n              type: \"CLEAR\"\n            });\n          }\n        }).catch(error => console.log(error));\n      } catch (error) {\n        cookie.remove(\"reactreserve_token\");\n        router.push(\"/login\");\n      }\n    }\n\n    if (token) {\n      validateUser();\n    } else {\n      if (isProtectedRoute) {\n        router.push(\"/login\");\n      }\n    }\n  });\n  return __jsx(Context.Provider, {\n    value: [state, dispatch],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nexport default Authentication;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/components/Authentication/Authentication.js"],"names":["React","createContext","useReducer","Reducer","cookies","useRouter","axios","baseUrl","initialState","user","Context","Authentication","children","state","dispatch","token","get","router","pathname","isProtectedRoute","useEffect","validateUser","url","payload","headers","Authorization","post","then","response","console","log","data","success","type","catch","error","cookie","remove","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,OAAO,MAAMC,OAAO,gBAAGT,aAAa,CAACO,YAAD,CAA7B;;AAEP,SAASG,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAsC;AACpC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,UAAU,CAACC,OAAD,EAAUK,YAAV,CAApC;AACA,QAAMO,KAAK,GAAGX,OAAO,CAACY,GAAR,CAAY,oBAAZ,CAAd;AACA,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AACA,QAAMC,gBAAgB,GAAID,QAAQ,KAAK,UAAb,IAA2BA,QAAQ,KAAK,SAAlE;AAEAlB,EAAAA,KAAK,CAACoB,SAAN,CAAiB,MAAM;AACrB,mBAAeC,YAAf,GAA8B;AAE5B,UAAI;AACF,cAAMC,GAAG,GAAI,GAAEf,OAAQ,cAAvB;AACA,cAAMgB,OAAO,GAAG;AAAEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAEV;AAAjB;AAAX,SAAhB;AACA,cAAMT,KAAK,CAACoB,IAAN,CAAWJ,GAAX,EAAgB,EAAhB,EAAoBC,OAApB,EACHI,IADG,CACEC,QAAQ,IAAI;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,OAA1B;;AACA,cAAIJ,QAAQ,CAACG,IAAT,CAAcC,OAAlB,EAA2B;AACzBlB,YAAAA,QAAQ,CAAC;AAAEmB,cAAAA,IAAI,EAAE,UAAR;AAAoBxB,cAAAA,IAAI,EAAEA;AAA1B,aAAD,CAAR;AACD,WAFD,MAEO;AACLK,YAAAA,QAAQ,CAAC;AAAEmB,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAR;AACD;AACF,SARG,EASHC,KATG,CASGC,KAAK,IAAIN,OAAO,CAACC,GAAR,CAAYK,KAAZ,CATZ,CAAN;AAUD,OAbD,CAaE,OAAMA,KAAN,EAAa;AACbC,QAAAA,MAAM,CAACC,MAAP,CAAc,oBAAd;AACApB,QAAAA,MAAM,CAACqB,IAAP,CAAY,QAAZ;AACD;AAEF;;AACD,QAAIvB,KAAJ,EAAW;AACTM,MAAAA,YAAY;AACb,KAFD,MAEO;AACL,UAAIF,gBAAJ,EAAsB;AACpBF,QAAAA,MAAM,CAACqB,IAAP,CAAY,QAAZ;AACD;AACF;AACF,GA7BD;AA+BA,SACE,MAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE,CAACzB,KAAD,EAAQC,QAAR,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,QADJ,CADF;AAKD;;AAED,eAAeD,cAAf","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport Reducer from \"./Reducer\";\nimport cookies from \"js-cookie\";\nimport { useRouter } from \"next/router\"\nimport axios from \"axios\"\nimport baseUrl from \"../utils/baseUrl\";\n\nconst initialState = {\n  user: false\n}\n\nexport const Context = createContext(initialState);\n\nfunction Authentication({ children }) {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  const token = cookies.get('reactreserve_token')\n  const router = useRouter();\n  const pathname = router.pathname;\n  const isProtectedRoute = (pathname === \"/account\" || pathname === \"/create\");\n\n  React.useEffect( () => {\n    async function validateUser() {\n\n      try {\n        const url = `${baseUrl}/api/account`\n        const payload = { headers: { Authorization: token }}\n        await axios.post(url, {}, payload)\n          .then(response => {\n            console.log(response.data.success);\n            if (response.data.success) {\n              dispatch({ type: \"SET_USER\", user: user})\n            } else {\n              dispatch({ type: \"CLEAR\" })\n            }\n          })\n          .catch(error => console.log(error))\n      } catch(error) {\n        cookie.remove(\"reactreserve_token\");\n        router.push(\"/login\")\n      }\n\n    }\n    if (token) {\n      validateUser();\n    } else {\n      if (isProtectedRoute) {\n        router.push(\"/login\")\n      }\n    }\n  })\n\n  return (\n    <Context.Provider value={[state, dispatch]}>\n      { children }\n    </Context.Provider>\n  )\n}\n\nexport default Authentication;"]},"metadata":{},"sourceType":"module"}