{"ast":null,"code":"import _regeneratorRuntime from \"/Users/renanyudi/Sites/estudos/react-app/react-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/renanyudi/Sites/estudos/react-app/react-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\"; //Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\n\nimport ProductList from \"../components/Index/ProductList\";\n\nfunction Home(props) {\n  return __jsx(ProductList, {\n    products: props.products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }\n  });\n}\n\n_c = Home;\n\nHome.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var url, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(ctx);\n            url = \"\".concat(baseUrl, \"/api/products\"); // fetch data on server\n\n            _context.next = 4;\n            return axios.get(url);\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", {\n              products: response.data.products\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/* export async function getServerSideProps(context) {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  const response = await axios.get(url);\n  if (response.data.success) {\n    return {\n      props: {\n        products: response.data.products\n      } // will be passed to the page component as props\n    }\n  } else {\n    return {\n      props: {}\n    }\n  }\n} */\n\n\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/index.js"],"names":["axios","baseUrl","ProductList","Home","props","products","getInitialProps","ctx","console","log","url","get","response","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,SAAO,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA,KAAK,CAACC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;KAFQF,I;;AAITA,IAAI,CAACG,eAAL;AAAA,sEAAuB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACMG,YAAAA,GAFe,aAENT,OAFM,oBAGrB;;AAHqB;AAAA,mBAIED,KAAK,CAACW,GAAN,CAAUD,GAAV,CAJF;;AAAA;AAIfE,YAAAA,QAJe;AAAA,6CAMd;AAAEP,cAAAA,QAAQ,EAAEO,QAAQ,CAACC,IAAT,CAAcR;AAA1B,aANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeF,IAAf","sourcesContent":["import axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\n\n//Com useEffect() buscamos dados no client side, \n//mas com getStaticProps fazemos um pre-carregamento,\n//deixando mais rapido, use issae é so exportar a funcao que ja funciona.\nimport ProductList from \"../components/Index/ProductList\";\n\nfunction Home(props) {\n  return <ProductList products={props.products} />\n}\n\nHome.getInitialProps = async (ctx) => {\n  console.log(ctx)\n  const url = `${baseUrl}/api/products`;\n  // fetch data on server\n  const response = await axios.get(url);\n  // return response data as an object\n  return { products: response.data.products };\n  // note: this object will be merged with existing props\n};\n \n\n/* export async function getServerSideProps(context) {\n  const url = `${baseUrl}/api/products`;\n  let data = {};\n  // fetch data on server\n  const response = await axios.get(url);\n  if (response.data.success) {\n    return {\n      props: {\n        products: response.data.products\n      } // will be passed to the page component as props\n    }\n  } else {\n    return {\n      props: {}\n    }\n  }\n} */\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}