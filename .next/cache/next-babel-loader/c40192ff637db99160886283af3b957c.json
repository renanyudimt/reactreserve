{"ast":null,"code":"var _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/components/Cart/CartSummary.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Button, Segment, Divider } from \"semantic-ui-react\";\nimport React, { useState } from \"react\";\nimport calculateCartTotal from \"../../utils/calculateCartTotal\";\nimport StripeCheckout from \"react-stripe-checkout\";\n\nfunction CartSummary(_ref) {\n  _s();\n\n  var products = _ref.products,\n      handleCheckout = _ref.handleCheckout;\n\n  var _useState = useState(0),\n      cartAmount = _useState[0],\n      setCartAmount = _useState[1];\n\n  var _useState2 = useState(0),\n      stripeAmount = _useState2[0],\n      setStripeAmount = _useState2[1];\n\n  var _useState3 = useState(true),\n      isCartEmpty = _useState3[0],\n      setCartEmpty = _useState3[1];\n\n  React.useEffect(function () {\n    var _calculateCartTotal = calculateCartTotal(products),\n        cartTotal = _calculateCartTotal.cartTotal,\n        stripeTotal = _calculateCartTotal.stripeTotal;\n\n    setCartEmpty(products.length == 0);\n    setCartAmount(cartTotal);\n    setStripeAmount(stripeTotal);\n  }, [products]);\n  return __jsx(React.Fragment, null, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }), __jsx(Segment, {\n    clearing: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Sub total: \"), \" $\", cartAmount, __jsx(StripeCheckout, {\n    name: \"React Reserve\",\n    amount: stripeAmount,\n    image: products.length > 0 ? products[0].product.mediaUrl : \"\",\n    currency: \"usd\",\n    shippingAddress: true,\n    zipCode: true,\n    token: handleCheckout,\n    triggerEvent: \"onClick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    disabled: isCartEmpty,\n    icon: \"cart\",\n    color: \"teal\",\n    floated: \"right\",\n    content: \"Checkout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }))));\n}\n\n_s(CartSummary, \"xPc7j1pI+LP2Zdc5GFIpYCbIsLk=\");\n\n_c = CartSummary;\nexport default CartSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartSummary\");","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/components/Cart/CartSummary.js"],"names":["Button","Segment","Divider","React","useState","calculateCartTotal","StripeCheckout","CartSummary","products","handleCheckout","cartAmount","setCartAmount","stripeAmount","setStripeAmount","isCartEmpty","setCartEmpty","useEffect","cartTotal","stripeTotal","length","product","mediaUrl"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,QAAyC,mBAAzC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,SAASC,WAAT,OAAmD;AAAA;;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,cAAkB,QAAlBA,cAAkB;;AAAA,kBACbL,QAAQ,CAAC,CAAD,CADK;AAAA,MAC1CM,UAD0C;AAAA,MAC9BC,aAD8B;;AAAA,mBAETP,QAAQ,CAAC,CAAD,CAFC;AAAA,MAE1CQ,YAF0C;AAAA,MAE5BC,eAF4B;;AAAA,mBAGbT,QAAQ,CAAC,IAAD,CAHK;AAAA,MAG1CU,WAH0C;AAAA,MAG7BC,YAH6B;;AAKjDZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAM;AAAA,8BACeX,kBAAkB,CAACG,QAAD,CADjC;AAAA,QACZS,SADY,uBACZA,SADY;AAAA,QACDC,WADC,uBACDA,WADC;;AAEpBH,IAAAA,YAAY,CAACP,QAAQ,CAACW,MAAT,IAAmB,CAApB,CAAZ;AACAR,IAAAA,aAAa,CAACM,SAAD,CAAb;AACAJ,IAAAA,eAAe,CAACK,WAAD,CAAf;AAED,GAND,EAMG,CAACV,QAAD,CANH;AAQA,SACA,4BACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,QACkCE,UADlC,EAEE,MAAC,cAAD;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,MAAM,EAAEE,YAFV;AAGE,IAAA,KAAK,EAAEJ,QAAQ,CAACW,MAAT,GAAkB,CAAlB,GAAsBX,QAAQ,CAAC,CAAD,CAAR,CAAYY,OAAZ,CAAoBC,QAA1C,GAAqD,EAH9D;AAIE,IAAA,QAAQ,EAAC,KAJX;AAKE,IAAA,eAAe,EAAE,IALnB;AAME,IAAA,OAAO,EAAE,IANX;AAOE,IAAA,KAAK,EAAEZ,cAPT;AAQE,IAAA,YAAY,EAAC,SARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEK,WAAlB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,KAAK,EAAC,MAAlD;AAAyD,IAAA,OAAO,EAAC,OAAjE;AAAyE,IAAA,OAAO,EAAC,UAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAFF,CAFF,CADA;AAoBD;;GAjCQP,W;;KAAAA,W;AAmCT,eAAeA,WAAf","sourcesContent":["import { Button, Segment, Divider } from \"semantic-ui-react\"\nimport React, { useState } from \"react\";\nimport calculateCartTotal from \"../../utils/calculateCartTotal\";\nimport StripeCheckout from \"react-stripe-checkout\"\n\nfunction CartSummary({ products, handleCheckout }) {\n  const [cartAmount, setCartAmount] = useState(0)\n  const [stripeAmount, setStripeAmount] = useState(0)\n  const [isCartEmpty, setCartEmpty] = useState(true)\n\n  React.useEffect(() => {\n    const { cartTotal, stripeTotal } = calculateCartTotal(products)\n    setCartEmpty(products.length == 0)\n    setCartAmount(cartTotal)\n    setStripeAmount(stripeTotal)\n\n  }, [products])\n  \n  return (\n  <> \n    <Divider />\n    <Segment clearing size=\"large\">\n      <strong>Sub total: </strong> ${ cartAmount }\n      <StripeCheckout \n        name=\"React Reserve\"\n        amount={stripeAmount}\n        image={products.length > 0 ? products[0].product.mediaUrl : \"\"}\n        currency=\"usd\"\n        shippingAddress={true}\n        zipCode={true}\n        token={handleCheckout}\n        triggerEvent=\"onClick\"\n      >\n        <Button disabled={isCartEmpty}  icon=\"cart\" color=\"teal\" floated=\"right\" content=\"Checkout\" />\n      </StripeCheckout>\n    </Segment>\n  </>\n  )\n}\n\nexport default CartSummary"]},"metadata":{},"sourceType":"module"}