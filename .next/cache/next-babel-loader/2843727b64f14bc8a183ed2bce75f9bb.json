{"ast":null,"code":"var _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/pages/cart.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Segment } from \"semantic-ui-react\";\nimport CartItemList from \"../components/Cart/CartItemList\";\nimport CartSummary from \"../components/Cart/CartSummary\";\nimport { parseCookies } from \"nookies\";\nimport baseUrl from \"../utils/baseUrl\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction Cart({\n  products,\n  user\n}) {\n  const {\n    0: cartProducts,\n    1: setCartProducts\n  } = useState(products);\n\n  function handleRemoveFromCart() {}\n\n  return __jsx(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(CartItemList, {\n    handleRemoveFunction: true,\n    user: user,\n    products: products.cart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), __jsx(CartSummary, {\n    products: products.cart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n}\n\nCart.getInitialProps = async ctx => {\n  const {\n    reactreserve_token\n  } = parseCookies(ctx);\n\n  if (!reactreserve_token) {\n    return {\n      products: []\n    };\n  } else {\n    const url = `${baseUrl}/api/cart`;\n    const payload = {\n      headers: {\n        Authorization: reactreserve_token\n      }\n    };\n    const response = await axios.get(url, payload);\n    return {\n      products: response.data\n    };\n  }\n};\n\nexport default Cart;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/cart.js"],"names":["Segment","CartItemList","CartSummary","parseCookies","baseUrl","axios","useState","Cart","products","user","cartProducts","setCartProducts","handleRemoveFromCart","cart","getInitialProps","ctx","reactreserve_token","url","payload","headers","Authorization","response","get","data"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAd,EAAkC;AAChC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCL,QAAQ,CAACE,QAAD,CAAhD;;AAEA,WAASI,oBAAT,GAAgC,CAE/B;;AAED,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,oBAAoB,MAAlC;AAAmC,IAAA,IAAI,EAAGH,IAA1C;AAAiD,IAAA,QAAQ,EAAGD,QAAQ,CAACK,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAGL,QAAQ,CAACK,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAEDN,IAAI,CAACO,eAAL,GAAuB,MAAOC,GAAP,IAAe;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAyBb,YAAY,CAACY,GAAD,CAA3C;;AACA,MAAI,CAACC,kBAAL,EAAyB;AACvB,WAAO;AACLR,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD,GAJD,MAIO;AACL,UAAMS,GAAG,GAAI,GAAEb,OAAQ,WAAvB;AACA,UAAMc,OAAO,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEJ;AAAjB;AAAX,KAAhB;AACA,UAAMK,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAUL,GAAV,EAAeC,OAAf,CAAvB;AACA,WAAO;AACLV,MAAAA,QAAQ,EAAEa,QAAQ,CAACE;AADd,KAAP;AAGD;AACF,CAdD;;AAgBA,eAAehB,IAAf","sourcesContent":["import { Segment } from \"semantic-ui-react\"\nimport CartItemList from \"../components/Cart/CartItemList\"\nimport CartSummary from \"../components/Cart/CartSummary\"\nimport { parseCookies } from \"nookies\";\nimport baseUrl from \"../utils/baseUrl\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction Cart({ products, user }) {  \n  const [cartProducts, setCartProducts] = useState(products)\n\n  function handleRemoveFromCart() {\n\n  }\n\n  return (\n    <Segment>\n      <CartItemList handleRemoveFunction user={ user } products={ products.cart }/>\n      <CartSummary products={ products.cart } />\n    </Segment>\n  )\n}\n\nCart.getInitialProps = async (ctx) => {\n  const { reactreserve_token } = parseCookies(ctx);\n  if (!reactreserve_token) {\n    return {\n      products: []\n    }\n  } else { \n    const url = `${baseUrl}/api/cart`;\n    const payload = { headers: { Authorization: reactreserve_token }}\n    const response = await axios.get(url, payload)\n    return {\n      products: response.data\n    }\n  }\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}