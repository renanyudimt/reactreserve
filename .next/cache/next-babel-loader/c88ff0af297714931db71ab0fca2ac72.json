{"ast":null,"code":"import _regeneratorRuntime from \"/Users/renanyudi/Sites/estudos/react-app/react-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/renanyudi/Sites/estudos/react-app/react-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/components/Product/AddProductToCart.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Input } from \"semantic-ui-react\";\nimport React, { useState } from \"react\";\nimport { useRouter, Router } from \"next/router\";\nimport axios from \"axios\";\nimport baseUrl from \"../../utils/baseUrl\";\nimport cookie from \"js-cookie\";\n\nfunction AddProductToCart(_ref) {\n  _s();\n\n  var user = _ref.user,\n      productId = _ref.productId;\n\n  var _useState = useState(1),\n      quantity = _useState[0],\n      setQuantity = _useState[1];\n\n  var router = useRouter();\n  var token = cookie.get(\"reactreserve-token\");\n\n  function handleAddProductToCart() {\n    return _handleAddProductToCart.apply(this, arguments);\n  }\n\n  function _handleAddProductToCart() {\n    _handleAddProductToCart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, payload, headers, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"\".concat(baseUrl, \"/api/cart\");\n              payload = {\n                quantity: quantity,\n                productId: productId\n              };\n              headers = {\n                headers: {\n                  Authorization: token\n                }\n              };\n              _context.next = 5;\n              return axios.post(url, payload, headers);\n\n            case 5:\n              response = _context.sent;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleAddProductToCart.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Input, {\n    type: \"number\",\n    min: \"1\",\n    placeholder: \"Quantity\",\n    value: quantity,\n    onChange: function onChange(event) {\n      return setQuantity(Number(event.target.value));\n    },\n    action: user ? {\n      color: \"orange\",\n      content: \"Add to Cart\",\n      icon: \"plus cart\",\n      onClick: handleAddProductToCart\n    } : {\n      color: \"blue\",\n      content: \"Signup to Purchase\",\n      icon: \"signup\",\n      onClick: function onClick() {\n        router.push(\"/login\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }));\n}\n\n_s(AddProductToCart, \"wWacwz/2/VwSvBV//aSz/DoBu6Q=\", false, function () {\n  return [useRouter];\n});\n\n_c = AddProductToCart;\nexport default AddProductToCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProductToCart\");","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/components/Product/AddProductToCart.js"],"names":["Input","React","useState","useRouter","Router","axios","baseUrl","cookie","AddProductToCart","user","productId","quantity","setQuantity","router","token","get","handleAddProductToCart","url","payload","headers","Authorization","post","response","event","Number","target","value","color","content","icon","onClick","push"],"mappings":";;;;;;;AAAA,SAASA,KAAT,QAAsB,mBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,aAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,SAASC,gBAAT,OAA+C;AAAA;;AAAA,MAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBACbR,QAAQ,CAAC,CAAD,CADK;AAAA,MACtCS,QADsC;AAAA,MAC5BC,WAD4B;;AAE7C,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,MAAMW,KAAK,GAAGP,MAAM,CAACQ,GAAP,CAAW,oBAAX,CAAd;;AAH6C,WAK9BC,sBAL8B;AAAA;AAAA;;AAAA;AAAA,uFAK7C;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,cAAAA,GADR,aACiBX,OADjB;AAEQY,cAAAA,OAFR,GAEkB;AACdP,gBAAAA,QAAQ,EAAEA,QADI;AAEdD,gBAAAA,SAAS,EAAEA;AAFG,eAFlB;AAMQS,cAAAA,OANR,GAMkB;AACdA,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,EAAEN;AADR;AADK,eANlB;AAAA;AAAA,qBAYyBT,KAAK,CAACgB,IAAN,CAAWJ,GAAX,EAAgBC,OAAhB,EAAyBC,OAAzB,CAZzB;;AAAA;AAYQG,cAAAA,QAZR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAL6C;AAAA;AAAA;;AAoB7C,SAAO,4BACL,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,GAAG,EAAC,GAFN;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,KAAK,EAAGX,QAJV;AAKE,IAAA,QAAQ,EAAG,kBAAAY,KAAK;AAAA,aAAIX,WAAW,CAACY,MAAM,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAP,CAAf;AAAA,KALlB;AAME,IAAA,MAAM,EAAEjB,IAAI,GAAG;AACbkB,MAAAA,KAAK,EAAE,QADM;AAEbC,MAAAA,OAAO,EAAE,aAFI;AAGbC,MAAAA,IAAI,EAAE,WAHO;AAIbC,MAAAA,OAAO,EAAEd;AAJI,KAAH,GAKR;AACFW,MAAAA,KAAK,EAAE,MADL;AAEFC,MAAAA,OAAO,EAAE,oBAFP;AAGFC,MAAAA,IAAI,EAAE,QAHJ;AAIFC,MAAAA,OAAO,EAAE,mBAAM;AACbjB,QAAAA,MAAM,CAACkB,IAAP,CAAY,QAAZ;AACD;AANC,KAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CAAP;AAsBD;;GA1CQvB,gB;UAEQL,S;;;KAFRK,gB;AA4CT,eAAeA,gBAAf","sourcesContent":["import { Input } from \"semantic-ui-react\";\nimport React, { useState } from \"react\";\nimport { useRouter, Router } from \"next/router\"\nimport axios from \"axios\"\nimport baseUrl from \"../../utils/baseUrl\";\nimport cookie from \"js-cookie\";\n\nfunction AddProductToCart({ user, productId }) {\n  const [quantity, setQuantity] = useState(1);\n  const router = useRouter();\n  const token = cookie.get(\"reactreserve-token\");\n\n  async function handleAddProductToCart() { \n    const url = `${baseUrl}/api/cart`;\n    const payload = {\n      quantity: quantity,\n      productId: productId,\n    }\n    const headers = {\n      headers: {\n        Authorization: token\n      }\n    }\n\n    const response = await axios.post(url, payload, headers)\n  }\n\n  return <>\n    <Input \n      type=\"number\"\n      min=\"1\"\n      placeholder=\"Quantity\"\n      value={ quantity }\n      onChange={ event => setQuantity(Number(event.target.value)) }\n      action={user ? {\n        color: \"orange\",\n        content: \"Add to Cart\",\n        icon: \"plus cart\",\n        onClick: handleAddProductToCart\n      } : {\n        color: \"blue\",\n        content: \"Signup to Purchase\",\n        icon: \"signup\",\n        onClick: () => {\n          router.push(\"/login\")\n        }\n      }}\n    />\n  </>\n}\n\nexport default AddProductToCart;"]},"metadata":{},"sourceType":"module"}