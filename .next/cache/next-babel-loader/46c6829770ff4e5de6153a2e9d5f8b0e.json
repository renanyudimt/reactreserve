{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Icon, Message, Segment, Form } from \"semantic-ui-react\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport catchErrors from \"../utils/catchErrors\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { handleLogin } from \"../utils/auth\";\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  password: \"\"\n};\n\nfunction Signup() {\n  const [user, setUser] = React.useState(INITIAL_STATE);\n  const [disabled, setDisable] = React.useState(true);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n  React.useEffect(() => {\n    //vamos validar os campos do form\n    const isUser = Object.values(user).every(el => Boolean(el));\n    isUser ? setDisable(false) : setDisable(true);\n    console.log(\"isUser\", isUser);\n  }, [user]);\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      [name]: value\n    }));\n    console.log(user);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      setLoading(true);\n      setError(\"\"); //pra nao deixar ela la pra sempre caso de um erro ne..\n\n      const url = `${baseUrl}/api/signup`;\n\n      const payload = _objectSpread({}, user);\n\n      const response = await axios.post(url, payload);\n\n      if (response.data.success) {\n        handleLogin(response.data.token);\n      } else {\n        setError(response.data.msg);\n      }\n    } catch (error) {\n      catchErrors(error, setError);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Message, {\n    attached: true,\n    icon: \"settings\",\n    header: \"Get Started!\",\n    content: \"Create a new account\",\n    color: \"teal\"\n  }), __jsx(Form, {\n    error: Boolean(error),\n    loading: loading,\n    onSubmit: handleSubmit\n  }, __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: error\n  }), __jsx(Segment, null, __jsx(Form.Input, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    label: \"Name\",\n    name: \"name\",\n    placeholder: \"Name\",\n    value: user.name,\n    onChange: handleChange\n  }), __jsx(Form.Input, {\n    fluid: true,\n    icon: \"envelope\",\n    iconPosition: \"left\",\n    label: \"E-mail\",\n    name: \"email\",\n    placeholder: \"E-mail\",\n    type: \"email\",\n    value: user.email,\n    onChange: handleChange\n  }), __jsx(Form.Input, {\n    fluid: true,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    label: \"Password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    type: \"password\",\n    value: user.password,\n    onChange: handleChange\n  }), __jsx(Button, {\n    icon: \"signup\",\n    type: \"submit\",\n    color: \"orange\",\n    content: \"Signup\",\n    disabled: disabled\n  }))), __jsx(Message, {\n    attached: \"bottom\",\n    warning: true\n  }, __jsx(Icon, {\n    name: \"help\"\n  }), \"Existing user? \", \" \", __jsx(Link, {\n    href: \"/login\"\n  }, __jsx(\"a\", null, \"Log in here\")), \"  \", \" \", \" instead\"));\n}\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}