{"ast":null,"code":"import Product from \"../../models/Product\";\nimport connectDb from \"../../utils/connectDb\";\nconnectDb();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n\n    case \"POST\":\n      await handlePostRequest(req, res);\n      break;\n\n    case \"DELETE\":\n      await handleDeleteRequest(req, res);\n      break;\n\n    case \"PUT\":\n      await handlePutRequest(req, res);\n      break;\n\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n});\n\nasync function handleGetRequest(req, res) {\n  const product = await Product.findOne({\n    _id: req.query.id\n  });\n\n  if (res.status(200)) {\n    res.json(product);\n  } else {\n    console.log(\"erro no get\");\n  }\n}\n\nasync function handlePostRequest(req, res) {\n  const {\n    name,\n    price,\n    description,\n    media\n  } = req.body;\n\n  if (!name || !price || !description || !media) {\n    return res.status(422).send(\"Product missing one or more fields\");\n  }\n\n  const product = await new Product({\n    name,\n    price,\n    description,\n    mediaUrl\n  }).save();\n  res.status(201).json(product);\n}\n\nasync function handleDeleteRequest(req, res) {\n  console.log(req);\n  await Product.findOneAndDelete({\n    _id: req.query.id\n  });\n\n  if (res.status(204)) {\n    res.json({});\n  }\n}\n\nasync function handlePutRequest(req, res) {}","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/pages/api/product.js"],"names":["Product","connectDb","req","res","method","handleGetRequest","handlePostRequest","handleDeleteRequest","handlePutRequest","status","send","product","findOne","_id","query","id","json","console","log","name","price","description","media","body","mediaUrl","save","findOneAndDelete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEAA,SAAS;AAET,gBAAe,OAAMC,GAAN,EAAWC,GAAX,KAAmB;AAChC,UAAOD,GAAG,CAACE,MAAX;AACE,SAAK,KAAL;AACE,YAAMC,gBAAgB,CAACH,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACF,SAAK,MAAL;AACE,YAAMG,iBAAiB,CAACJ,GAAD,EAAMC,GAAN,CAAvB;AACA;;AACF,SAAK,QAAL;AACE,YAAMI,mBAAmB,CAACL,GAAD,EAAMC,GAAN,CAAzB;AACA;;AACF,SAAK,KAAL;AACE,YAAMK,gBAAgB,CAACN,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACF;AACEA,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB,UAASR,GAAG,CAACE,MAAO,cAA1C;AACA;AAfJ;AAiBD,CAlBD;;AAoBA,eAAeC,gBAAf,CAAgCH,GAAhC,EAAqCC,GAArC,EAA0C;AACxC,QAAMQ,OAAO,GAAG,MAAMX,OAAO,CAACY,OAAR,CAAgB;AAAEC,IAAAA,GAAG,EAAEX,GAAG,CAACY,KAAJ,CAAUC;AAAjB,GAAhB,CAAtB;;AACA,MAAIZ,GAAG,CAACM,MAAJ,CAAW,GAAX,CAAJ,EAAqB;AACnBN,IAAAA,GAAG,CAACa,IAAJ,CAASL,OAAT;AACD,GAFD,MAEO;AACLM,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;AACF;;AAED,eAAeZ,iBAAf,CAAiCJ,GAAjC,EAAsCC,GAAtC,EAA2C;AACzC,QAAM;AAAEgB,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA;AAA5B,MAAsCpB,GAAG,CAACqB,IAAhD;;AACA,MAAI,CAACJ,IAAD,IAAS,CAACC,KAAV,IAAmB,CAACC,WAApB,IAAmC,CAACC,KAAxC,EAA+C;AAC7C,WAAOnB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oCAArB,CAAP;AACD;;AAED,QAAMC,OAAO,GAAG,MAAM,IAAIX,OAAJ,CAAY;AAChCmB,IAAAA,IADgC;AAEhCC,IAAAA,KAFgC;AAGhCC,IAAAA,WAHgC;AAIhCG,IAAAA;AAJgC,GAAZ,EAKnBC,IALmB,EAAtB;AAOAtB,EAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqBL,OAArB;AACD;;AAED,eAAeJ,mBAAf,CAAmCL,GAAnC,EAAwCC,GAAxC,EAA6C;AAC3Cc,EAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACA,QAAMF,OAAO,CAAC0B,gBAAR,CAAyB;AAAEb,IAAAA,GAAG,EAAEX,GAAG,CAACY,KAAJ,CAAUC;AAAjB,GAAzB,CAAN;;AACA,MAAIZ,GAAG,CAACM,MAAJ,CAAW,GAAX,CAAJ,EAAqB;AACnBN,IAAAA,GAAG,CAACa,IAAJ,CAAS,EAAT;AACD;AACF;;AAED,eAAeR,gBAAf,CAAgCN,GAAhC,EAAqCC,GAArC,EAA0C,CAEzC","sourcesContent":["import Product from \"../../models/Product\";\nimport connectDb from \"../../utils/connectDb\";\n\nconnectDb(); \n\nexport default async(req, res) => {\n  switch(req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n    case \"POST\":\n      await handlePostRequest(req, res);\n      break;\n    case \"DELETE\":\n      await handleDeleteRequest(req, res);\n      break;\n    case \"PUT\":\n      await handlePutRequest(req, res);\n      break;\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n}\n\nasync function handleGetRequest(req, res) {\n  const product = await Product.findOne({ _id: req.query.id });\n  if (res.status(200)) {\n    res.json(product);\n  } else {\n    console.log(\"erro no get\")\n  }\n}\n\nasync function handlePostRequest(req, res) {\n  const { name, price, description, media } = req.body\n  if (!name || !price || !description || !media) {\n    return res.status(422).send(\"Product missing one or more fields\");\n  }\n\n  const product = await new Product({\n    name, \n    price, \n    description, \n    mediaUrl\n  }).save()\n\n  res.status(201).json(product)\n} \n\nasync function handleDeleteRequest(req, res) {\n  console.log(req)\n  await Product.findOneAndDelete({ _id: req.query.id });\n  if (res.status(204)) {\n    res.json({})\n  }\n}\n\nasync function handlePutRequest(req, res) {\n\n}"]},"metadata":{},"sourceType":"module"}