{"ast":null,"code":"var _jsxFileName = \"/Users/renanyudi/Sites/estudos/react-app/react-next/components/Product/AddProductToCart.js\";\nvar __jsx = React.createElement;\nimport { Input } from \"semantic-ui-react\";\nimport React, { useState } from \"react\";\nimport { useRouter, Router } from \"next/router\";\nimport axios from \"axios\";\nimport baseUrl from \"../../utils/baseUrl\";\nimport cookie from \"js-cookie\";\nimport catchErrors from \"../../utils/catchErrors\";\n\nfunction AddProductToCart({\n  user,\n  productId\n}) {\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(1);\n  const router = useRouter();\n  const token = cookie.get(\"reactreserve_token\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false); //eu que quero fazer essa configuracao\n\n  React.useEffect(() => {\n    if (success) {\n      setTimeout(() => setSuccess(false), 2000);\n    }\n  }, [success]);\n\n  async function handleAddProductToCart() {\n    try {\n      setLoading(true);\n      const url = `${baseUrl}/api/cart`;\n      const payload = {\n        quantity: quantity,\n        productId: productId\n      };\n      const headers = {\n        headers: {\n          Authorization: token\n        }\n      };\n      await axios.put(url, payload, headers).then(() => setSuccess(true)).catch(() => setState(true));\n    } catch (error) {\n      catchErrors(error, window.alert);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Input, {\n    type: \"number\",\n    min: \"1\",\n    placeholder: \"Quantity\",\n    value: quantity,\n    onChange: event => setQuantity(Number(event.target.value)),\n    action: user && success ? {\n      color: \"blue\",\n      content: \"Item added!\",\n      icon: \"plus cart\",\n      disabled: true\n    } : user ? {\n      color: \"orange\",\n      content: \"Add to Cart\",\n      icon: \"plus cart\",\n      loading: loading,\n      disabled: loading,\n      onClick: handleAddProductToCart\n    } : {\n      color: \"blue\",\n      content: \"Signup to Purchase\",\n      icon: \"signup\",\n      onClick: () => {\n        router.push(\"/login\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default AddProductToCart;","map":{"version":3,"sources":["/Users/renanyudi/Sites/estudos/react-app/react-next/components/Product/AddProductToCart.js"],"names":["Input","React","useState","useRouter","Router","axios","baseUrl","cookie","catchErrors","AddProductToCart","user","productId","quantity","setQuantity","router","token","get","loading","setLoading","success","setSuccess","error","setError","useEffect","setTimeout","handleAddProductToCart","url","payload","headers","Authorization","put","then","catch","setState","window","alert","event","Number","target","value","color","content","icon","disabled","onClick","push"],"mappings":"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","sourcesContent":["import { Input } from \"semantic-ui-react\";\nimport React, { useState } from \"react\";\nimport { useRouter, Router } from \"next/router\"\nimport axios from \"axios\"\nimport baseUrl from \"../../utils/baseUrl\";\nimport cookie from \"js-cookie\";\nimport catchErrors from \"../../utils/catchErrors\";\n\nfunction AddProductToCart({ user, productId }) {\n  const [quantity, setQuantity] = useState(1);\n  const router = useRouter();\n  const token = cookie.get(\"reactreserve_token\");\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false) //eu que quero fazer essa configuracao\n\n  React.useEffect(() => {\n    if (success) { \n      setTimeout(() => setSuccess(false), 2000);\n    }\n  }, [success])\n\n  async function handleAddProductToCart() { \n    try {\n      setLoading(true);\n      const url = `${baseUrl}/api/cart`;\n      const payload = {\n        quantity: quantity,\n        productId: productId,\n      }\n      const headers = {\n        headers: {\n          Authorization: token\n        }\n      }\n      \n      await axios.put(url, payload, headers)\n        .then(() => setSuccess(true))\n        .catch(() => setState(true))\n    } catch(error) {\n      catchErrors(error, window.alert)\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return <>\n    <Input \n      type=\"number\"\n      min=\"1\"\n      placeholder=\"Quantity\"\n      value={ quantity }\n      onChange={ event => setQuantity(Number(event.target.value)) }\n      action={\n        user && success ? {\n          color: \"blue\",\n          content: \"Item added!\",\n          icon: \"plus cart\",\n          disabled: true\n        } :\n        user ? {\n        color: \"orange\",\n        content: \"Add to Cart\",\n        icon: \"plus cart\",\n        loading: loading,\n        disabled: loading,\n        onClick: handleAddProductToCart\n      } : {\n        color: \"blue\",\n        content: \"Signup to Purchase\",\n        icon: \"signup\",\n        onClick: () => {\n          router.push(\"/login\")\n        }\n      }}\n    />\n  </>\n}\n\nexport default AddProductToCart;"]},"metadata":{},"sourceType":"module"}